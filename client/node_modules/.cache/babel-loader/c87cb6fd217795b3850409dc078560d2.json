{"ast":null,"code":"/**\n * Compare two points\n * @param a\n * @param b\n * @returns true if the points are equal\n */\nexport function arePointsEqual(a, b) {\n  const ax = Array.isArray(a) ? a[0] : a ? a.x : 0;\n  const ay = Array.isArray(a) ? a[1] : a ? a.y : 0;\n  const bx = Array.isArray(b) ? b[0] : b ? b.x : 0;\n  const by = Array.isArray(b) ? b[1] : b ? b.y : 0;\n  return ax === bx && ay === by;\n}\n/* eslint-disable complexity */\n\n/**\n * Compare any two objects\n * @param a\n * @param b\n * @returns true if the objects are deep equal\n */\n\nexport function deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!a || !b) {\n    return false;\n  }\n\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b) || a.length !== b.length) {\n      return false;\n    }\n\n    for (let i = 0; i < a.length; i++) {\n      if (!deepEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  } else if (Array.isArray(b)) {\n    return false;\n  }\n\n  if (typeof a === 'object' && typeof b === 'object') {\n    const aKeys = Object.keys(a);\n    const bKeys = Object.keys(b);\n\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n\n    for (const key of aKeys) {\n      if (!b.hasOwnProperty(key)) {\n        return false;\n      }\n\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["../../../src/utils/deep-equal.ts"],"names":[],"mappings":"AAEA;;;;;AAKG;AACH,OAAM,SAAU,cAAV,CAAyB,CAAzB,EAAwC,CAAxC,EAAqD;EACzD,MAAM,EAAE,GAAG,KAAK,CAAC,OAAN,CAAc,CAAd,IAAmB,CAAC,CAAC,CAAD,CAApB,GAA0B,CAAC,GAAG,CAAC,CAAC,CAAL,GAAS,CAA/C;EACA,MAAM,EAAE,GAAG,KAAK,CAAC,OAAN,CAAc,CAAd,IAAmB,CAAC,CAAC,CAAD,CAApB,GAA0B,CAAC,GAAG,CAAC,CAAC,CAAL,GAAS,CAA/C;EACA,MAAM,EAAE,GAAG,KAAK,CAAC,OAAN,CAAc,CAAd,IAAmB,CAAC,CAAC,CAAD,CAApB,GAA0B,CAAC,GAAG,CAAC,CAAC,CAAL,GAAS,CAA/C;EACA,MAAM,EAAE,GAAG,KAAK,CAAC,OAAN,CAAc,CAAd,IAAmB,CAAC,CAAC,CAAD,CAApB,GAA0B,CAAC,GAAG,CAAC,CAAC,CAAL,GAAS,CAA/C;EACA,OAAO,EAAE,KAAK,EAAP,IAAa,EAAE,KAAK,EAA3B;AACD;AAED;;AACA;;;;;AAKG;;AACH,OAAM,SAAU,SAAV,CAAoB,CAApB,EAA4B,CAA5B,EAAkC;EACtC,IAAI,CAAC,KAAK,CAAV,EAAa;IACX,OAAO,IAAP;EACD;;EACD,IAAI,CAAC,CAAD,IAAM,CAAC,CAAX,EAAc;IACZ,OAAO,KAAP;EACD;;EACD,IAAI,KAAK,CAAC,OAAN,CAAc,CAAd,CAAJ,EAAsB;IACpB,IAAI,CAAC,KAAK,CAAC,OAAN,CAAc,CAAd,CAAD,IAAqB,CAAC,CAAC,MAAF,KAAa,CAAC,CAAC,MAAxC,EAAgD;MAC9C,OAAO,KAAP;IACD;;IACD,KAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAAC,CAAC,MAAtB,EAA8B,CAAC,EAA/B,EAAmC;MACjC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAD,CAAF,EAAO,CAAC,CAAC,CAAD,CAAR,CAAd,EAA4B;QAC1B,OAAO,KAAP;MACD;IACF;;IACD,OAAO,IAAP;EACD,CAVD,MAUO,IAAI,KAAK,CAAC,OAAN,CAAc,CAAd,CAAJ,EAAsB;IAC3B,OAAO,KAAP;EACD;;EACD,IAAI,OAAO,CAAP,KAAa,QAAb,IAAyB,OAAO,CAAP,KAAa,QAA1C,EAAoD;IAClD,MAAM,KAAK,GAAG,MAAM,CAAC,IAAP,CAAY,CAAZ,CAAd;IACA,MAAM,KAAK,GAAG,MAAM,CAAC,IAAP,CAAY,CAAZ,CAAd;;IACA,IAAI,KAAK,CAAC,MAAN,KAAiB,KAAK,CAAC,MAA3B,EAAmC;MACjC,OAAO,KAAP;IACD;;IACD,KAAK,MAAM,GAAX,IAAkB,KAAlB,EAAyB;MACvB,IAAI,CAAC,CAAC,CAAC,cAAF,CAAiB,GAAjB,CAAL,EAA4B;QAC1B,OAAO,KAAP;MACD;;MACD,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAD,CAAF,EAAS,CAAC,CAAC,GAAD,CAAV,CAAd,EAAgC;QAC9B,OAAO,KAAP;MACD;IACF;;IACD,OAAO,IAAP;EACD;;EACD,OAAO,KAAP;AACD","sourceRoot":"","sourcesContent":["/**\n * Compare two points\n * @param a\n * @param b\n * @returns true if the points are equal\n */\nexport function arePointsEqual(a, b) {\n    const ax = Array.isArray(a) ? a[0] : a ? a.x : 0;\n    const ay = Array.isArray(a) ? a[1] : a ? a.y : 0;\n    const bx = Array.isArray(b) ? b[0] : b ? b.x : 0;\n    const by = Array.isArray(b) ? b[1] : b ? b.y : 0;\n    return ax === bx && ay === by;\n}\n/* eslint-disable complexity */\n/**\n * Compare any two objects\n * @param a\n * @param b\n * @returns true if the objects are deep equal\n */\nexport function deepEqual(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b) || a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n            if (!deepEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else if (Array.isArray(b)) {\n        return false;\n    }\n    if (typeof a === 'object' && typeof b === 'object') {\n        const aKeys = Object.keys(a);\n        const bKeys = Object.keys(b);\n        if (aKeys.length !== bKeys.length) {\n            return false;\n        }\n        for (const key of aKeys) {\n            if (!b.hasOwnProperty(key)) {\n                return false;\n            }\n            if (!deepEqual(a[key], b[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=deep-equal.js.map"]},"metadata":{},"sourceType":"module"}