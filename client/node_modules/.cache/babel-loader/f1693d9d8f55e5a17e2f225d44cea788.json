{"ast":null,"code":"/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\n'use strict';\n\nexport default {\n  name: 'table',\n  display: 'submenu',\n  add: function (core, targetElement) {\n    const context = core.context;\n    let contextTable = context.table = {\n      _element: null,\n      _tdElement: null,\n      _trElement: null,\n      _trElements: null,\n      _tableXY: [],\n      _maxWidth: true,\n      _fixedColumn: false,\n      _rtl: core.options.rtl,\n      cellControllerTop: core.options.tableCellControllerPosition === 'top',\n      resizeText: null,\n      headerButton: null,\n      mergeButton: null,\n      splitButton: null,\n      splitMenu: null,\n      maxText: core.lang.controller.maxSize,\n      minText: core.lang.controller.minSize,\n      _physical_cellCnt: 0,\n      _logical_cellCnt: 0,\n      _rowCnt: 0,\n      _rowIndex: 0,\n      _physical_cellIndex: 0,\n      _logical_cellIndex: 0,\n      _current_colSpan: 0,\n      _current_rowSpan: 0,\n      icons: {\n        expansion: core.icons.expansion,\n        reduction: core.icons.reduction\n      }\n    };\n    /** set submenu */\n\n    let listDiv = this.setSubmenu(core);\n    let tablePicker = listDiv.querySelector('.se-controller-table-picker');\n    contextTable.tableHighlight = listDiv.querySelector('.se-table-size-highlighted');\n    contextTable.tableUnHighlight = listDiv.querySelector('.se-table-size-unhighlighted');\n    contextTable.tableDisplay = listDiv.querySelector('.se-table-size-display');\n    if (core.options.rtl) contextTable.tableHighlight.style.left = 10 * 18 - 13 + 'px';\n    /** set table controller */\n\n    let tableController = this.setController_table(core);\n    contextTable.tableController = tableController;\n    contextTable.resizeButton = tableController.querySelector('._se_table_resize');\n    contextTable.resizeText = tableController.querySelector('._se_table_resize > span > span');\n    contextTable.columnFixedButton = tableController.querySelector('._se_table_fixed_column');\n    contextTable.headerButton = tableController.querySelector('._se_table_header');\n    /** set resizing */\n\n    let resizeDiv = this.setController_tableEditor(core, contextTable.cellControllerTop);\n    contextTable.resizeDiv = resizeDiv;\n    contextTable.splitMenu = resizeDiv.querySelector('.se-btn-group-sub');\n    contextTable.mergeButton = resizeDiv.querySelector('._se_table_merge_button');\n    contextTable.splitButton = resizeDiv.querySelector('._se_table_split_button');\n    contextTable.insertRowAboveButton = resizeDiv.querySelector('._se_table_insert_row_a');\n    contextTable.insertRowBelowButton = resizeDiv.querySelector('._se_table_insert_row_b');\n    /** add event listeners */\n\n    tablePicker.addEventListener('mousemove', this.onMouseMove_tablePicker.bind(core, contextTable));\n    tablePicker.addEventListener('click', this.appendTable.bind(core));\n    resizeDiv.addEventListener('click', this.onClick_tableController.bind(core));\n    tableController.addEventListener('click', this.onClick_tableController.bind(core));\n    /** append target button menu */\n\n    core.initMenuTarget(this.name, targetElement, listDiv);\n    /** append controller */\n\n    context.element.relative.appendChild(resizeDiv);\n    context.element.relative.appendChild(tableController);\n    /** empty memory */\n\n    listDiv = null, tablePicker = null, resizeDiv = null, tableController = null, contextTable = null;\n  },\n  setSubmenu: function (core) {\n    const listDiv = core.util.createElement('DIV');\n    listDiv.className = 'se-submenu se-selector-table';\n    listDiv.innerHTML = '' + '<div class=\"se-table-size\">' + '<div class=\"se-table-size-picker se-controller-table-picker\"></div>' + '<div class=\"se-table-size-highlighted\"></div>' + '<div class=\"se-table-size-unhighlighted\"></div>' + '</div>' + '<div class=\"se-table-size-display\">1 x 1</div>';\n    return listDiv;\n  },\n  setController_table: function (core) {\n    const lang = core.lang;\n    const icons = core.icons;\n    const tableResize = core.util.createElement('DIV');\n    tableResize.className = 'se-controller se-controller-table';\n    tableResize.innerHTML = '' + '<div>' + '<div class=\"se-btn-group\">' + '<button type=\"button\" data-command=\"resize\" class=\"se-btn se-tooltip _se_table_resize\">' + icons.expansion + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.maxSize + '</span></span>' + '</button>' + '<button type=\"button\" data-command=\"layout\" class=\"se-btn se-tooltip _se_table_fixed_column\">' + icons.fixed_column_width + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.fixedColumnWidth + '</span></span>' + '</button>' + '<button type=\"button\" data-command=\"header\" class=\"se-btn se-tooltip _se_table_header\">' + icons.table_header + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.tableHeader + '</span></span>' + '</button>' + '<button type=\"button\" data-command=\"remove\" class=\"se-btn se-tooltip\">' + icons.delete + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.remove + '</span></span>' + '</button>' + '</div>' + '</div>';\n    return tableResize;\n  },\n  setController_tableEditor: function (core, cellControllerTop) {\n    const lang = core.lang;\n    const icons = core.icons;\n    const tableResize = core.util.createElement('DIV');\n    tableResize.className = 'se-controller se-controller-table-cell';\n    tableResize.innerHTML = (cellControllerTop ? '' : '<div class=\"se-arrow se-arrow-up\"></div>') + '<div class=\"se-btn-group\">' + '<button type=\"button\" data-command=\"insert\" data-value=\"row\" data-option=\"up\" class=\"se-btn se-tooltip _se_table_insert_row_a\">' + icons.insert_row_above + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.insertRowAbove + '</span></span>' + '</button>' + '<button type=\"button\" data-command=\"insert\" data-value=\"row\" data-option=\"down\" class=\"se-btn se-tooltip _se_table_insert_row_b\">' + icons.insert_row_below + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.insertRowBelow + '</span></span>' + '</button>' + '<button type=\"button\" data-command=\"delete\" data-value=\"row\" class=\"se-btn se-tooltip\">' + icons.delete_row + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.deleteRow + '</span></span>' + '</button>' + '<button type=\"button\" data-command=\"merge\" class=\"_se_table_merge_button se-btn se-tooltip\" disabled>' + icons.merge_cell + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.mergeCells + '</span></span>' + '</button>' + '</div>' + '<div class=\"se-btn-group\" style=\"padding-top: 0;\">' + '<button type=\"button\" data-command=\"insert\" data-value=\"cell\" data-option=\"left\" class=\"se-btn se-tooltip\">' + icons.insert_column_left + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.insertColumnBefore + '</span></span>' + '</button>' + '<button type=\"button\" data-command=\"insert\" data-value=\"cell\" data-option=\"right\" class=\"se-btn se-tooltip\">' + icons.insert_column_right + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.insertColumnAfter + '</span></span>' + '</button>' + '<button type=\"button\" data-command=\"delete\" data-value=\"cell\" class=\"se-btn se-tooltip\">' + icons.delete_column + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.deleteColumn + '</span></span>' + '</button>' + '<button type=\"button\" data-command=\"onsplit\" class=\"_se_table_split_button se-btn se-tooltip\">' + icons.split_cell + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.splitCells + '</span></span>' + '</button>' + '<div class=\"se-btn-group-sub sun-editor-common se-list-layer se-table-split\">' + '<div class=\"se-list-inner\">' + '<ul class=\"se-list-basic\">' + '<li class=\"se-btn-list\" data-command=\"split\" data-value=\"vertical\" style=\"line-height:32px;\" title=\"' + lang.controller.VerticalSplit + '\" aria-label=\"' + lang.controller.VerticalSplit + '\">' + lang.controller.VerticalSplit + '</li>' + '<li class=\"se-btn-list\" data-command=\"split\" data-value=\"horizontal\" style=\"line-height:32px;\" title=\"' + lang.controller.HorizontalSplit + '\" aria-label=\"' + lang.controller.HorizontalSplit + '\">' + lang.controller.HorizontalSplit + '</li>' + '</ul>' + '</div>' + '</div>' + '</div>';\n    return tableResize;\n  },\n  appendTable: function () {\n    const oTable = this.util.createElement('TABLE');\n    const createCells = this.plugins.table.createCells;\n    const x = this.context.table._tableXY[0];\n    let y = this.context.table._tableXY[1];\n    let tableHTML = '<tbody>';\n\n    while (y > 0) {\n      tableHTML += '<tr>' + createCells.call(this, 'td', x) + '</tr>';\n      --y;\n    }\n\n    tableHTML += '</tbody>';\n    oTable.innerHTML = tableHTML;\n    const changed = this.insertComponent(oTable, false, true, false);\n\n    if (changed) {\n      const firstTd = oTable.querySelector('td div');\n      this.setRange(firstTd, 0, firstTd, 0);\n      this.plugins.table.reset_table_picker.call(this);\n    }\n  },\n  createCells: function (nodeName, cnt, returnElement) {\n    nodeName = nodeName.toLowerCase();\n\n    if (!returnElement) {\n      let cellsHTML = '';\n\n      while (cnt > 0) {\n        cellsHTML += '<' + nodeName + '><div><br></div></' + nodeName + '>';\n        cnt--;\n      }\n\n      return cellsHTML;\n    } else {\n      const cell = this.util.createElement(nodeName);\n      cell.innerHTML = '<div><br></div>';\n      return cell;\n    }\n  },\n  onMouseMove_tablePicker: function (contextTable, e) {\n    e.stopPropagation();\n\n    let x = this._w.Math.ceil(e.offsetX / 18);\n\n    let y = this._w.Math.ceil(e.offsetY / 18);\n\n    x = x < 1 ? 1 : x;\n    y = y < 1 ? 1 : y;\n\n    if (contextTable._rtl) {\n      contextTable.tableHighlight.style.left = x * 18 - 13 + 'px';\n      x = 11 - x;\n    }\n\n    contextTable.tableHighlight.style.width = x + 'em';\n    contextTable.tableHighlight.style.height = y + 'em'; // let x_u = x < 5 ? 5 : (x > 9 ? 10 : x + 1);\n    // let y_u = y < 5 ? 5 : (y > 9 ? 10 : y + 1);\n    // contextTable.tableUnHighlight.style.width = x_u + 'em';\n    // contextTable.tableUnHighlight.style.height = y_u + 'em';\n\n    this.util.changeTxt(contextTable.tableDisplay, x + ' x ' + y);\n    contextTable._tableXY = [x, y];\n  },\n  reset_table_picker: function () {\n    if (!this.context.table.tableHighlight) return;\n    const highlight = this.context.table.tableHighlight.style;\n    const unHighlight = this.context.table.tableUnHighlight.style;\n    highlight.width = '1em';\n    highlight.height = '1em';\n    unHighlight.width = '10em';\n    unHighlight.height = '10em';\n    this.util.changeTxt(this.context.table.tableDisplay, '1 x 1');\n    this.submenuOff();\n  },\n  init: function () {\n    const contextTable = this.context.table;\n    const tablePlugin = this.plugins.table;\n\n    tablePlugin._removeEvents.call(this);\n\n    if (tablePlugin._selectedTable) {\n      const selectedCells = tablePlugin._selectedTable.querySelectorAll('.se-table-selected-cell');\n\n      for (let i = 0, len = selectedCells.length; i < len; i++) {\n        this.util.removeClass(selectedCells[i], 'se-table-selected-cell');\n      }\n    }\n\n    tablePlugin._toggleEditor.call(this, true);\n\n    contextTable._element = null;\n    contextTable._tdElement = null;\n    contextTable._trElement = null;\n    contextTable._trElements = null;\n    contextTable._tableXY = [];\n    contextTable._maxWidth = true;\n    contextTable._fixedColumn = false;\n    contextTable._physical_cellCnt = 0;\n    contextTable._logical_cellCnt = 0;\n    contextTable._rowCnt = 0;\n    contextTable._rowIndex = 0;\n    contextTable._physical_cellIndex = 0;\n    contextTable._logical_cellIndex = 0;\n    contextTable._current_colSpan = 0;\n    contextTable._current_rowSpan = 0;\n    tablePlugin._shift = false;\n    tablePlugin._selectedCells = null;\n    tablePlugin._selectedTable = null;\n    tablePlugin._ref = null;\n    tablePlugin._fixedCell = null;\n    tablePlugin._selectedCell = null;\n    tablePlugin._fixedCellName = null;\n  },\n\n  /** table edit controller */\n  call_controller_tableEdit: function (tdElement) {\n    const tablePlugin = this.plugins.table;\n    const contextTable = this.context.table;\n\n    if (!this.getSelection().isCollapsed && !tablePlugin._selectedCell) {\n      this.controllersOff();\n      this.util.removeClass(tdElement, 'se-table-selected-cell');\n      return;\n    }\n\n    const tableElement = contextTable._element || this.plugins.table._selectedTable || this.util.getParentElement(tdElement, 'TABLE');\n    contextTable._maxWidth = this.util.hasClass(tableElement, 'se-table-size-100') || tableElement.style.width === '100%' || !tableElement.style.width && !this.util.hasClass(tableElement, 'se-table-size-auto');\n    contextTable._fixedColumn = this.util.hasClass(tableElement, 'se-table-layout-fixed') || tableElement.style.tableLayout === 'fixed';\n    tablePlugin.setTableStyle.call(this, contextTable._maxWidth ? 'width|column' : 'width');\n    tablePlugin.setPositionControllerTop.call(this, tableElement);\n    tablePlugin.setPositionControllerDiv.call(this, tdElement, tablePlugin._shift);\n    if (!tablePlugin._shift) this.controllersOn(contextTable.resizeDiv, contextTable.tableController, tablePlugin.init.bind(this), tdElement, 'table');\n  },\n  setPositionControllerTop: function (tableElement) {\n    this.setControllerPosition(this.context.table.tableController, tableElement, 'top', {\n      left: 0,\n      top: 0\n    });\n  },\n  setPositionControllerDiv: function (tdElement, reset) {\n    const contextTable = this.context.table;\n    const resizeDiv = contextTable.resizeDiv;\n    this.plugins.table.setCellInfo.call(this, tdElement, reset);\n\n    if (contextTable.cellControllerTop) {\n      this.setControllerPosition(resizeDiv, contextTable._element, 'top', {\n        left: contextTable.tableController.offsetWidth,\n        top: 0\n      });\n    } else {\n      this.setControllerPosition(resizeDiv, tdElement, 'bottom', {\n        left: 0,\n        top: 0\n      });\n    }\n  },\n  setCellInfo: function (tdElement, reset) {\n    const contextTable = this.context.table;\n    const table = contextTable._element = this.plugins.table._selectedTable || this.util.getParentElement(tdElement, 'TABLE');\n\n    if (/THEAD/i.test(table.firstElementChild.nodeName)) {\n      this.util.addClass(contextTable.headerButton, 'active');\n    } else {\n      this.util.removeClass(contextTable.headerButton, 'active');\n    }\n\n    if (reset || contextTable._physical_cellCnt === 0) {\n      if (contextTable._tdElement !== tdElement) {\n        contextTable._tdElement = tdElement;\n        contextTable._trElement = tdElement.parentNode;\n      }\n\n      const rows = contextTable._trElements = table.rows;\n      const cellIndex = tdElement.cellIndex;\n      let cellCnt = 0;\n\n      for (let i = 0, cells = rows[0].cells, len = rows[0].cells.length; i < len; i++) {\n        cellCnt += cells[i].colSpan;\n      } // row cnt, row index\n\n\n      const rowIndex = contextTable._rowIndex = contextTable._trElement.rowIndex;\n      contextTable._rowCnt = rows.length; // cell cnt, physical cell index\n\n      contextTable._physical_cellCnt = contextTable._trElement.cells.length;\n      contextTable._logical_cellCnt = cellCnt;\n      contextTable._physical_cellIndex = cellIndex; // span\n\n      contextTable._current_colSpan = contextTable._tdElement.colSpan - 1;\n      contextTable._current_rowSpan - contextTable._trElement.cells[cellIndex].rowSpan - 1; // find logcal cell index\n\n      let rowSpanArr = [];\n      let spanIndex = [];\n\n      for (let i = 0, cells, colSpan; i <= rowIndex; i++) {\n        cells = rows[i].cells;\n        colSpan = 0;\n\n        for (let c = 0, cLen = cells.length, cell, cs, rs, logcalIndex; c < cLen; c++) {\n          cell = cells[c];\n          cs = cell.colSpan - 1;\n          rs = cell.rowSpan - 1;\n          logcalIndex = c + colSpan;\n\n          if (spanIndex.length > 0) {\n            for (let r = 0, arr; r < spanIndex.length; r++) {\n              arr = spanIndex[r];\n              if (arr.row > i) continue;\n\n              if (logcalIndex >= arr.index) {\n                colSpan += arr.cs;\n                logcalIndex += arr.cs;\n                arr.rs -= 1;\n                arr.row = i + 1;\n\n                if (arr.rs < 1) {\n                  spanIndex.splice(r, 1);\n                  r--;\n                }\n              } else if (c === cLen - 1) {\n                arr.rs -= 1;\n                arr.row = i + 1;\n\n                if (arr.rs < 1) {\n                  spanIndex.splice(r, 1);\n                  r--;\n                }\n              }\n            }\n          } // logcal cell index\n\n\n          if (i === rowIndex && c === cellIndex) {\n            contextTable._logical_cellIndex = logcalIndex;\n            break;\n          }\n\n          if (rs > 0) {\n            rowSpanArr.push({\n              index: logcalIndex,\n              cs: cs + 1,\n              rs: rs,\n              row: -1\n            });\n          }\n\n          colSpan += cs;\n        }\n\n        spanIndex = spanIndex.concat(rowSpanArr).sort(function (a, b) {\n          return a.index - b.index;\n        });\n        rowSpanArr = [];\n      }\n\n      rowSpanArr = null;\n      spanIndex = null;\n    }\n  },\n  editTable: function (type, option) {\n    const tablePlugin = this.plugins.table;\n    const contextTable = this.context.table;\n    const table = contextTable._element;\n    const isRow = type === 'row';\n\n    if (isRow) {\n      const tableAttr = contextTable._trElement.parentNode;\n\n      if (/^THEAD$/i.test(tableAttr.nodeName)) {\n        if (option === 'up') {\n          return;\n        } else if (!tableAttr.nextElementSibling || !/^TBODY$/i.test(tableAttr.nextElementSibling.nodeName)) {\n          table.innerHTML += '<tbody><tr>' + tablePlugin.createCells.call(this, 'td', contextTable._logical_cellCnt, false) + '</tr></tbody>';\n          return;\n        }\n      }\n    } // multi\n\n\n    if (tablePlugin._ref) {\n      const positionCell = contextTable._tdElement;\n      const selectedCells = tablePlugin._selectedCells; // multi - row\n\n      if (isRow) {\n        // remove row\n        if (!option) {\n          let row = selectedCells[0].parentNode;\n          const removeCells = [selectedCells[0]];\n\n          for (let i = 1, len = selectedCells.length, cell; i < len; i++) {\n            cell = selectedCells[i];\n\n            if (row !== cell.parentNode) {\n              removeCells.push(cell);\n              row = cell.parentNode;\n            }\n          }\n\n          for (let i = 0, len = removeCells.length; i < len; i++) {\n            tablePlugin.setCellInfo.call(this, removeCells[i], true);\n            tablePlugin.editRow.call(this, option);\n          }\n        } else {\n          // edit row\n          tablePlugin.setCellInfo.call(this, option === 'up' ? selectedCells[0] : selectedCells[selectedCells.length - 1], true);\n          tablePlugin.editRow.call(this, option, positionCell);\n        }\n      } else {\n        // multi - cell\n        const firstRow = selectedCells[0].parentNode; // remove cell\n\n        if (!option) {\n          const removeCells = [selectedCells[0]];\n\n          for (let i = 1, len = selectedCells.length, cell; i < len; i++) {\n            cell = selectedCells[i];\n\n            if (firstRow === cell.parentNode) {\n              removeCells.push(cell);\n            } else {\n              break;\n            }\n          }\n\n          for (let i = 0, len = removeCells.length; i < len; i++) {\n            tablePlugin.setCellInfo.call(this, removeCells[i], true);\n            tablePlugin.editCell.call(this, option);\n          }\n        } else {\n          // edit cell\n          let rightCell = null;\n\n          for (let i = 0, len = selectedCells.length - 1; i < len; i++) {\n            if (firstRow !== selectedCells[i + 1].parentNode) {\n              rightCell = selectedCells[i];\n              break;\n            }\n          }\n\n          tablePlugin.setCellInfo.call(this, option === 'left' ? selectedCells[0] : rightCell || selectedCells[0], true);\n          tablePlugin.editCell.call(this, option, positionCell);\n        }\n      }\n\n      if (!option) tablePlugin.init.call(this);\n    } // one\n    else {\n      tablePlugin[isRow ? 'editRow' : 'editCell'].call(this, option);\n    } // after remove\n\n\n    if (!option) {\n      const children = table.children;\n\n      for (let i = 0; i < children.length; i++) {\n        if (children[i].children.length === 0) {\n          this.util.removeItem(children[i]);\n          i--;\n        }\n      }\n\n      if (table.children.length === 0) this.util.removeItem(table);\n    }\n  },\n  editRow: function (option, positionResetElement) {\n    const contextTable = this.context.table;\n    const remove = !option;\n    const up = option === 'up';\n    const originRowIndex = contextTable._rowIndex;\n    const rowIndex = remove || up ? originRowIndex : originRowIndex + contextTable._current_rowSpan + 1;\n    const sign = remove ? -1 : 1;\n    const rows = contextTable._trElements;\n    let cellCnt = contextTable._logical_cellCnt;\n\n    for (let i = 0, len = originRowIndex + (remove ? -1 : 0), cell; i <= len; i++) {\n      cell = rows[i].cells;\n      if (cell.length === 0) return;\n\n      for (let c = 0, cLen = cell.length, rs, cs; c < cLen; c++) {\n        rs = cell[c].rowSpan;\n        cs = cell[c].colSpan;\n        if (rs < 2 && cs < 2) continue;\n\n        if (rs + i > rowIndex && rowIndex > i) {\n          cell[c].rowSpan = rs + sign;\n          cellCnt -= cs;\n        }\n      }\n    }\n\n    if (remove) {\n      const next = rows[originRowIndex + 1];\n\n      if (next) {\n        const spanCells = [];\n        let cells = rows[originRowIndex].cells;\n        let colSpan = 0;\n\n        for (let i = 0, len = cells.length, cell, logcalIndex; i < len; i++) {\n          cell = cells[i];\n          logcalIndex = i + colSpan;\n          colSpan += cell.colSpan - 1;\n\n          if (cell.rowSpan > 1) {\n            cell.rowSpan -= 1;\n            spanCells.push({\n              cell: cell.cloneNode(false),\n              index: logcalIndex\n            });\n          }\n        }\n\n        if (spanCells.length > 0) {\n          let spanCell = spanCells.shift();\n          cells = next.cells;\n          colSpan = 0;\n\n          for (let i = 0, len = cells.length, cell, logcalIndex; i < len; i++) {\n            cell = cells[i];\n            logcalIndex = i + colSpan;\n            colSpan += cell.colSpan - 1;\n\n            if (logcalIndex >= spanCell.index) {\n              i--, colSpan--;\n              colSpan += spanCell.cell.colSpan - 1;\n              next.insertBefore(spanCell.cell, cell);\n              spanCell = spanCells.shift();\n              if (!spanCell) break;\n            }\n          }\n\n          if (spanCell) {\n            next.appendChild(spanCell.cell);\n\n            for (let i = 0, len = spanCells.length; i < len; i++) {\n              next.appendChild(spanCells[i].cell);\n            }\n          }\n        }\n      }\n\n      contextTable._element.deleteRow(rowIndex);\n    } else {\n      const newRow = contextTable._element.insertRow(rowIndex);\n\n      newRow.innerHTML = this.plugins.table.createCells.call(this, 'td', cellCnt, false);\n    }\n\n    if (!remove) {\n      this.plugins.table.setPositionControllerDiv.call(this, positionResetElement || contextTable._tdElement, true);\n    } else {\n      this.controllersOff();\n    }\n  },\n  editCell: function (option, positionResetElement) {\n    const contextTable = this.context.table;\n    const util = this.util;\n    const remove = !option;\n    const left = option === 'left';\n    const colSpan = contextTable._current_colSpan;\n    const cellIndex = remove || left ? contextTable._logical_cellIndex : contextTable._logical_cellIndex + colSpan + 1;\n    const rows = contextTable._trElements;\n    let rowSpanArr = [];\n    let spanIndex = [];\n    let passCell = 0;\n    const removeCell = [];\n    const removeSpanArr = [];\n\n    for (let i = 0, len = contextTable._rowCnt, row, insertIndex, cells, newCell, applySpan, cellColSpan; i < len; i++) {\n      row = rows[i];\n      insertIndex = cellIndex;\n      applySpan = false;\n      cells = row.cells;\n      cellColSpan = 0;\n\n      for (let c = 0, cell, cLen = cells.length, rs, cs, removeIndex; c < cLen; c++) {\n        cell = cells[c];\n        if (!cell) break;\n        rs = cell.rowSpan - 1;\n        cs = cell.colSpan - 1;\n\n        if (!remove) {\n          if (c >= insertIndex) break;\n\n          if (cs > 0) {\n            if (passCell < 1 && cs + c >= insertIndex) {\n              cell.colSpan += 1;\n              insertIndex = null;\n              passCell = rs + 1;\n              break;\n            }\n\n            insertIndex -= cs;\n          }\n\n          if (!applySpan) {\n            for (let r = 0, arr; r < spanIndex.length; r++) {\n              arr = spanIndex[r];\n              insertIndex -= arr.cs;\n              arr.rs -= 1;\n\n              if (arr.rs < 1) {\n                spanIndex.splice(r, 1);\n                r--;\n              }\n            }\n\n            applySpan = true;\n          }\n        } else {\n          removeIndex = c + cellColSpan;\n\n          if (spanIndex.length > 0) {\n            const lastCell = !cells[c + 1];\n\n            for (let r = 0, arr; r < spanIndex.length; r++) {\n              arr = spanIndex[r];\n              if (arr.row > i) continue;\n\n              if (removeIndex >= arr.index) {\n                cellColSpan += arr.cs;\n                removeIndex = c + cellColSpan;\n                arr.rs -= 1;\n                arr.row = i + 1;\n\n                if (arr.rs < 1) {\n                  spanIndex.splice(r, 1);\n                  r--;\n                }\n              } else if (lastCell) {\n                arr.rs -= 1;\n                arr.row = i + 1;\n\n                if (arr.rs < 1) {\n                  spanIndex.splice(r, 1);\n                  r--;\n                }\n              }\n            }\n          }\n\n          if (rs > 0) {\n            rowSpanArr.push({\n              rs: rs,\n              cs: cs + 1,\n              index: removeIndex,\n              row: -1\n            });\n          }\n\n          if (removeIndex >= insertIndex && removeIndex + cs <= insertIndex + colSpan) {\n            removeCell.push(cell);\n          } else if (removeIndex <= insertIndex + colSpan && removeIndex + cs >= insertIndex) {\n            cell.colSpan -= util.getOverlapRangeAtIndex(cellIndex, cellIndex + colSpan, removeIndex, removeIndex + cs);\n          } else if (rs > 0 && (removeIndex < insertIndex || removeIndex + cs > insertIndex + colSpan)) {\n            removeSpanArr.push({\n              cell: cell,\n              i: i,\n              rs: i + rs\n            });\n          }\n\n          cellColSpan += cs;\n        }\n      }\n\n      spanIndex = spanIndex.concat(rowSpanArr).sort(function (a, b) {\n        return a.index - b.index;\n      });\n      rowSpanArr = [];\n\n      if (!remove) {\n        if (passCell > 0) {\n          passCell -= 1;\n          continue;\n        }\n\n        if (insertIndex !== null && cells.length > 0) {\n          newCell = this.plugins.table.createCells.call(this, cells[0].nodeName, 0, true);\n          newCell = row.insertBefore(newCell, cells[insertIndex]);\n        }\n      }\n    }\n\n    if (remove) {\n      let removeFirst, removeEnd;\n\n      for (let r = 0, rLen = removeCell.length, row; r < rLen; r++) {\n        row = removeCell[r].parentNode;\n        util.removeItem(removeCell[r]);\n\n        if (row.cells.length === 0) {\n          if (!removeFirst) removeFirst = util.getArrayIndex(rows, row);\n          removeEnd = util.getArrayIndex(rows, row);\n          util.removeItem(row);\n        }\n      }\n\n      for (let c = 0, cLen = removeSpanArr.length, rowSpanCell; c < cLen; c++) {\n        rowSpanCell = removeSpanArr[c];\n        rowSpanCell.cell.rowSpan = util.getOverlapRangeAtIndex(removeFirst, removeEnd, rowSpanCell.i, rowSpanCell.rs);\n      }\n\n      this.controllersOff();\n    } else {\n      this.plugins.table.setPositionControllerDiv.call(this, positionResetElement || contextTable._tdElement, true);\n    }\n  },\n  _closeSplitMenu: null,\n  openSplitMenu: function () {\n    this.util.addClass(this.context.table.splitButton, 'on');\n    this.context.table.splitMenu.style.display = 'inline-table';\n\n    this.plugins.table._closeSplitMenu = function () {\n      this.util.removeClass(this.context.table.splitButton, 'on');\n      this.context.table.splitMenu.style.display = 'none';\n      this.removeDocEvent('click', this.plugins.table._closeSplitMenu);\n      this.plugins.table._closeSplitMenu = null;\n    }.bind(this);\n\n    this.addDocEvent('click', this.plugins.table._closeSplitMenu);\n  },\n  splitCells: function (direction) {\n    const util = this.util;\n    const vertical = direction === 'vertical';\n    const contextTable = this.context.table;\n    const currentCell = contextTable._tdElement;\n    const rows = contextTable._trElements;\n    const currentRow = contextTable._trElement;\n    const index = contextTable._logical_cellIndex;\n    const rowIndex = contextTable._rowIndex;\n    const newCell = this.plugins.table.createCells.call(this, currentCell.nodeName, 0, true); // vertical\n\n    if (vertical) {\n      const currentColSpan = currentCell.colSpan;\n      newCell.rowSpan = currentCell.rowSpan; // colspan > 1\n\n      if (currentColSpan > 1) {\n        newCell.colSpan = this._w.Math.floor(currentColSpan / 2);\n        currentCell.colSpan = currentColSpan - newCell.colSpan;\n        currentRow.insertBefore(newCell, currentCell.nextElementSibling);\n      } else {\n        // colspan - 1\n        let rowSpanArr = [];\n        let spanIndex = [];\n\n        for (let i = 0, len = contextTable._rowCnt, cells, colSpan; i < len; i++) {\n          cells = rows[i].cells;\n          colSpan = 0;\n\n          for (let c = 0, cLen = cells.length, cell, cs, rs, logcalIndex; c < cLen; c++) {\n            cell = cells[c];\n            cs = cell.colSpan - 1;\n            rs = cell.rowSpan - 1;\n            logcalIndex = c + colSpan;\n\n            if (spanIndex.length > 0) {\n              for (let r = 0, arr; r < spanIndex.length; r++) {\n                arr = spanIndex[r];\n                if (arr.row > i) continue;\n\n                if (logcalIndex >= arr.index) {\n                  colSpan += arr.cs;\n                  logcalIndex += arr.cs;\n                  arr.rs -= 1;\n                  arr.row = i + 1;\n\n                  if (arr.rs < 1) {\n                    spanIndex.splice(r, 1);\n                    r--;\n                  }\n                } else if (c === cLen - 1) {\n                  arr.rs -= 1;\n                  arr.row = i + 1;\n\n                  if (arr.rs < 1) {\n                    spanIndex.splice(r, 1);\n                    r--;\n                  }\n                }\n              }\n            }\n\n            if (logcalIndex <= index && rs > 0) {\n              rowSpanArr.push({\n                index: logcalIndex,\n                cs: cs + 1,\n                rs: rs,\n                row: -1\n              });\n            }\n\n            if (cell !== currentCell && logcalIndex <= index && logcalIndex + cs >= index + currentColSpan - 1) {\n              cell.colSpan += 1;\n              break;\n            }\n\n            if (logcalIndex > index) break;\n            colSpan += cs;\n          }\n\n          spanIndex = spanIndex.concat(rowSpanArr).sort(function (a, b) {\n            return a.index - b.index;\n          });\n          rowSpanArr = [];\n        }\n\n        currentRow.insertBefore(newCell, currentCell.nextElementSibling);\n      }\n    } else {\n      // horizontal\n      const currentRowSpan = currentCell.rowSpan;\n      newCell.colSpan = currentCell.colSpan; // rowspan > 1\n\n      if (currentRowSpan > 1) {\n        newCell.rowSpan = this._w.Math.floor(currentRowSpan / 2);\n        const newRowSpan = currentRowSpan - newCell.rowSpan;\n        const rowSpanArr = [];\n        const nextRowIndex = util.getArrayIndex(rows, currentRow) + newRowSpan;\n\n        for (let i = 0, cells, colSpan; i < nextRowIndex; i++) {\n          cells = rows[i].cells;\n          colSpan = 0;\n\n          for (let c = 0, cLen = cells.length, cell, cs, logcalIndex; c < cLen; c++) {\n            logcalIndex = c + colSpan;\n            if (logcalIndex >= index) break;\n            cell = cells[c];\n            cs = cell.rowSpan - 1;\n\n            if (cs > 0 && cs + i >= nextRowIndex && logcalIndex < index) {\n              rowSpanArr.push({\n                index: logcalIndex,\n                cs: cell.colSpan\n              });\n            }\n\n            colSpan += cell.colSpan - 1;\n          }\n        }\n\n        const nextRow = rows[nextRowIndex];\n        const nextCells = nextRow.cells;\n        let rs = rowSpanArr.shift();\n\n        for (let c = 0, cLen = nextCells.length, colSpan = 0, cell, cs, logcalIndex, insertIndex; c < cLen; c++) {\n          logcalIndex = c + colSpan;\n          cell = nextCells[c];\n          cs = cell.colSpan - 1;\n          insertIndex = logcalIndex + cs + 1;\n\n          if (rs && insertIndex >= rs.index) {\n            colSpan += rs.cs;\n            insertIndex += rs.cs;\n            rs = rowSpanArr.shift();\n          }\n\n          if (insertIndex >= index || c === cLen - 1) {\n            nextRow.insertBefore(newCell, cell.nextElementSibling);\n            break;\n          }\n\n          colSpan += cs;\n        }\n\n        currentCell.rowSpan = newRowSpan;\n      } else {\n        // rowspan - 1\n        newCell.rowSpan = currentCell.rowSpan;\n        const newRow = util.createElement('TR');\n        newRow.appendChild(newCell);\n\n        for (let i = 0, cells; i < rowIndex; i++) {\n          cells = rows[i].cells;\n          if (cells.length === 0) return;\n\n          for (let c = 0, cLen = cells.length; c < cLen; c++) {\n            if (i + cells[c].rowSpan - 1 >= rowIndex) {\n              cells[c].rowSpan += 1;\n            }\n          }\n        }\n\n        const physicalIndex = contextTable._physical_cellIndex;\n        const cells = currentRow.cells;\n\n        for (let c = 0, cLen = cells.length; c < cLen; c++) {\n          if (c === physicalIndex) continue;\n          cells[c].rowSpan += 1;\n        }\n\n        currentRow.parentNode.insertBefore(newRow, currentRow.nextElementSibling);\n      }\n    }\n\n    this.focusEdge(currentCell);\n    this.plugins.table.setPositionControllerDiv.call(this, currentCell, true);\n  },\n  mergeCells: function () {\n    const tablePlugin = this.plugins.table;\n    const contextTable = this.context.table;\n    const util = this.util;\n    const ref = tablePlugin._ref;\n    const selectedCells = tablePlugin._selectedCells;\n    const mergeCell = selectedCells[0];\n    let emptyRowFirst = null;\n    let emptyRowLast = null;\n    let cs = ref.ce - ref.cs + 1;\n    let rs = ref.re - ref.rs + 1;\n    let mergeHTML = '';\n    let row = null;\n\n    for (let i = 1, len = selectedCells.length, cell, ch; i < len; i++) {\n      cell = selectedCells[i];\n      if (row !== cell.parentNode) row = cell.parentNode;\n      ch = cell.children;\n\n      for (let c = 0, cLen = ch.length; c < cLen; c++) {\n        if (util.isFormatElement(ch[c]) && util.onlyZeroWidthSpace(ch[c].textContent)) {\n          util.removeItem(ch[c]);\n        }\n      }\n\n      mergeHTML += cell.innerHTML;\n      util.removeItem(cell);\n\n      if (row.cells.length === 0) {\n        if (!emptyRowFirst) emptyRowFirst = row;else emptyRowLast = row;\n        rs -= 1;\n      }\n    }\n\n    if (emptyRowFirst) {\n      const rows = contextTable._trElements;\n      const rowIndexFirst = util.getArrayIndex(rows, emptyRowFirst);\n      const rowIndexLast = util.getArrayIndex(rows, emptyRowLast || emptyRowFirst);\n      const removeRows = [];\n\n      for (let i = 0, cells; i <= rowIndexLast; i++) {\n        cells = rows[i].cells;\n\n        if (cells.length === 0) {\n          removeRows.push(rows[i]);\n          continue;\n        }\n\n        for (let c = 0, cLen = cells.length, cell, rs; c < cLen; c++) {\n          cell = cells[c];\n          rs = cell.rowSpan - 1;\n\n          if (rs > 0 && i + rs >= rowIndexFirst) {\n            cell.rowSpan -= util.getOverlapRangeAtIndex(rowIndexFirst, rowIndexLast, i, i + rs);\n          }\n        }\n      }\n\n      for (let i = 0, len = removeRows.length; i < len; i++) {\n        util.removeItem(removeRows[i]);\n      }\n    }\n\n    mergeCell.innerHTML += mergeHTML;\n    mergeCell.colSpan = cs;\n    mergeCell.rowSpan = rs;\n    this.controllersOff();\n    tablePlugin.setActiveButton.call(this, true, false);\n    tablePlugin.call_controller_tableEdit.call(this, mergeCell);\n    util.addClass(mergeCell, 'se-table-selected-cell');\n    this.focusEdge(mergeCell);\n  },\n  toggleHeader: function () {\n    const util = this.util;\n    const headerButton = this.context.table.headerButton;\n    const active = util.hasClass(headerButton, 'active');\n    const table = this.context.table._element;\n\n    if (!active) {\n      const header = util.createElement('THEAD');\n      header.innerHTML = '<tr>' + this.plugins.table.createCells.call(this, 'th', this.context.table._logical_cellCnt, false) + '</tr>';\n      table.insertBefore(header, table.firstElementChild);\n    } else {\n      util.removeItem(table.querySelector('thead'));\n    }\n\n    util.toggleClass(headerButton, 'active');\n\n    if (/TH/i.test(this.context.table._tdElement.nodeName)) {\n      this.controllersOff();\n    } else {\n      this.plugins.table.setPositionControllerDiv.call(this, this.context.table._tdElement, false);\n    }\n  },\n  setTableStyle: function (styles) {\n    const contextTable = this.context.table;\n    const tableElement = contextTable._element;\n    let icon, span, sizeIcon, text;\n\n    if (styles.indexOf('width') > -1) {\n      icon = contextTable.resizeButton.firstElementChild;\n      span = contextTable.resizeText;\n\n      if (!contextTable._maxWidth) {\n        sizeIcon = contextTable.icons.expansion;\n        text = contextTable.maxText;\n        contextTable.columnFixedButton.style.display = 'none';\n        this.util.removeClass(tableElement, 'se-table-size-100');\n        this.util.addClass(tableElement, 'se-table-size-auto');\n      } else {\n        sizeIcon = contextTable.icons.reduction;\n        text = contextTable.minText;\n        contextTable.columnFixedButton.style.display = 'block';\n        this.util.removeClass(tableElement, 'se-table-size-auto');\n        this.util.addClass(tableElement, 'se-table-size-100');\n      }\n\n      this.util.changeElement(icon, sizeIcon);\n      this.util.changeTxt(span, text);\n    }\n\n    if (styles.indexOf('column') > -1) {\n      if (!contextTable._fixedColumn) {\n        this.util.removeClass(tableElement, 'se-table-layout-fixed');\n        this.util.addClass(tableElement, 'se-table-layout-auto');\n        this.util.removeClass(contextTable.columnFixedButton, 'active');\n      } else {\n        this.util.removeClass(tableElement, 'se-table-layout-auto');\n        this.util.addClass(tableElement, 'se-table-layout-fixed');\n        this.util.addClass(contextTable.columnFixedButton, 'active');\n      }\n    }\n  },\n  setActiveButton: function (fixedCell, selectedCell) {\n    const contextTable = this.context.table;\n\n    if (/^TH$/i.test(fixedCell.nodeName)) {\n      contextTable.insertRowAboveButton.setAttribute('disabled', true);\n      contextTable.insertRowBelowButton.setAttribute('disabled', true);\n    } else {\n      contextTable.insertRowAboveButton.removeAttribute('disabled');\n      contextTable.insertRowBelowButton.removeAttribute('disabled');\n    }\n\n    if (!selectedCell || fixedCell === selectedCell) {\n      contextTable.splitButton.removeAttribute('disabled');\n      contextTable.mergeButton.setAttribute('disabled', true);\n    } else {\n      contextTable.splitButton.setAttribute('disabled', true);\n      contextTable.mergeButton.removeAttribute('disabled');\n    }\n  },\n  // multi selecte\n  _bindOnSelect: null,\n  _bindOffSelect: null,\n  _bindOffShift: null,\n  _selectedCells: null,\n  _shift: false,\n  _fixedCell: null,\n  _fixedCellName: null,\n  _selectedCell: null,\n  _selectedTable: null,\n  _ref: null,\n  _toggleEditor: function (enabled) {\n    this.context.element.wysiwyg.setAttribute('contenteditable', enabled);\n    if (enabled) this.util.removeClass(this.context.element.wysiwyg, 'se-disabled');else this.util.addClass(this.context.element.wysiwyg, 'se-disabled');\n  },\n  _offCellMultiSelect: function (e) {\n    e.stopPropagation();\n    const tablePlugin = this.plugins.table;\n\n    if (!tablePlugin._shift) {\n      tablePlugin._removeEvents.call(this);\n\n      tablePlugin._toggleEditor.call(this, true);\n    } else if (tablePlugin._initBind) {\n      this._wd.removeEventListener('touchmove', tablePlugin._initBind);\n\n      tablePlugin._initBind = null;\n    }\n\n    if (!tablePlugin._fixedCell || !tablePlugin._selectedTable) return;\n    tablePlugin.setActiveButton.call(this, tablePlugin._fixedCell, tablePlugin._selectedCell);\n    tablePlugin.call_controller_tableEdit.call(this, tablePlugin._selectedCell || tablePlugin._fixedCell);\n    tablePlugin._selectedCells = tablePlugin._selectedTable.querySelectorAll('.se-table-selected-cell');\n    if (tablePlugin._selectedCell && tablePlugin._fixedCell) this.focusEdge(tablePlugin._selectedCell);\n\n    if (!tablePlugin._shift) {\n      tablePlugin._fixedCell = null;\n      tablePlugin._selectedCell = null;\n      tablePlugin._fixedCellName = null;\n    }\n  },\n  _onCellMultiSelect: function (e) {\n    this._antiBlur = true;\n    const tablePlugin = this.plugins.table;\n    const target = this.util.getParentElement(e.target, this.util.isCell);\n\n    if (tablePlugin._shift) {\n      if (target === tablePlugin._fixedCell) tablePlugin._toggleEditor.call(this, true);else tablePlugin._toggleEditor.call(this, false);\n    } else if (!tablePlugin._ref) {\n      if (target === tablePlugin._fixedCell) return;else tablePlugin._toggleEditor.call(this, false);\n    }\n\n    if (!target || target === tablePlugin._selectedCell || tablePlugin._fixedCellName !== target.nodeName || tablePlugin._selectedTable !== this.util.getParentElement(target, 'TABLE')) {\n      return;\n    }\n\n    tablePlugin._selectedCell = target;\n\n    tablePlugin._setMultiCells.call(this, tablePlugin._fixedCell, target);\n  },\n  _setMultiCells: function (startCell, endCell) {\n    const tablePlugin = this.plugins.table;\n    const rows = tablePlugin._selectedTable.rows;\n    const util = this.util;\n\n    const selectedCells = tablePlugin._selectedTable.querySelectorAll('.se-table-selected-cell');\n\n    for (let i = 0, len = selectedCells.length; i < len; i++) {\n      util.removeClass(selectedCells[i], 'se-table-selected-cell');\n    }\n\n    if (startCell === endCell) {\n      util.addClass(startCell, 'se-table-selected-cell');\n      if (!tablePlugin._shift) return;\n    }\n\n    let findSelectedCell = true;\n    let spanIndex = [];\n    let rowSpanArr = [];\n    const ref = tablePlugin._ref = {\n      _i: 0,\n      cs: null,\n      ce: null,\n      rs: null,\n      re: null\n    };\n\n    for (let i = 0, len = rows.length, cells, colSpan; i < len; i++) {\n      cells = rows[i].cells;\n      colSpan = 0;\n\n      for (let c = 0, cLen = cells.length, cell, logcalIndex, cs, rs; c < cLen; c++) {\n        cell = cells[c];\n        cs = cell.colSpan - 1;\n        rs = cell.rowSpan - 1;\n        logcalIndex = c + colSpan;\n\n        if (spanIndex.length > 0) {\n          for (let r = 0, arr; r < spanIndex.length; r++) {\n            arr = spanIndex[r];\n            if (arr.row > i) continue;\n\n            if (logcalIndex >= arr.index) {\n              colSpan += arr.cs;\n              logcalIndex += arr.cs;\n              arr.rs -= 1;\n              arr.row = i + 1;\n\n              if (arr.rs < 1) {\n                spanIndex.splice(r, 1);\n                r--;\n              }\n            } else if (c === cLen - 1) {\n              arr.rs -= 1;\n              arr.row = i + 1;\n\n              if (arr.rs < 1) {\n                spanIndex.splice(r, 1);\n                r--;\n              }\n            }\n          }\n        }\n\n        if (findSelectedCell) {\n          if (cell === startCell || cell === endCell) {\n            ref.cs = ref.cs !== null && ref.cs < logcalIndex ? ref.cs : logcalIndex;\n            ref.ce = ref.ce !== null && ref.ce > logcalIndex + cs ? ref.ce : logcalIndex + cs;\n            ref.rs = ref.rs !== null && ref.rs < i ? ref.rs : i;\n            ref.re = ref.re !== null && ref.re > i + rs ? ref.re : i + rs;\n            ref._i += 1;\n          }\n\n          if (ref._i === 2) {\n            findSelectedCell = false;\n            spanIndex = [];\n            rowSpanArr = [];\n            i = -1;\n            break;\n          }\n        } else if (util.getOverlapRangeAtIndex(ref.cs, ref.ce, logcalIndex, logcalIndex + cs) && util.getOverlapRangeAtIndex(ref.rs, ref.re, i, i + rs)) {\n          const newCs = ref.cs < logcalIndex ? ref.cs : logcalIndex;\n          const newCe = ref.ce > logcalIndex + cs ? ref.ce : logcalIndex + cs;\n          const newRs = ref.rs < i ? ref.rs : i;\n          const newRe = ref.re > i + rs ? ref.re : i + rs;\n\n          if (ref.cs !== newCs || ref.ce !== newCe || ref.rs !== newRs || ref.re !== newRe) {\n            ref.cs = newCs;\n            ref.ce = newCe;\n            ref.rs = newRs;\n            ref.re = newRe;\n            i = -1;\n            spanIndex = [];\n            rowSpanArr = [];\n            break;\n          }\n\n          util.addClass(cell, 'se-table-selected-cell');\n        }\n\n        if (rs > 0) {\n          rowSpanArr.push({\n            index: logcalIndex,\n            cs: cs + 1,\n            rs: rs,\n            row: -1\n          });\n        }\n\n        colSpan += cell.colSpan - 1;\n      }\n\n      spanIndex = spanIndex.concat(rowSpanArr).sort(function (a, b) {\n        return a.index - b.index;\n      });\n      rowSpanArr = [];\n    }\n  },\n  _removeEvents: function () {\n    const tablePlugin = this.plugins.table;\n\n    if (tablePlugin._initBind) {\n      this._wd.removeEventListener('touchmove', tablePlugin._initBind);\n\n      tablePlugin._initBind = null;\n    }\n\n    if (tablePlugin._bindOnSelect) {\n      this._wd.removeEventListener('mousedown', tablePlugin._bindOnSelect);\n\n      this._wd.removeEventListener('mousemove', tablePlugin._bindOnSelect);\n\n      tablePlugin._bindOnSelect = null;\n    }\n\n    if (tablePlugin._bindOffSelect) {\n      this._wd.removeEventListener('mouseup', tablePlugin._bindOffSelect);\n\n      tablePlugin._bindOffSelect = null;\n    }\n\n    if (tablePlugin._bindOffShift) {\n      this._wd.removeEventListener('keyup', tablePlugin._bindOffShift);\n\n      tablePlugin._bindOffShift = null;\n    }\n  },\n  _initBind: null,\n  onTableCellMultiSelect: function (tdElement, shift) {\n    const tablePlugin = this.plugins.table;\n\n    tablePlugin._removeEvents.call(this);\n\n    this.controllersOff();\n    tablePlugin._shift = shift;\n    tablePlugin._fixedCell = tdElement;\n    tablePlugin._fixedCellName = tdElement.nodeName;\n    tablePlugin._selectedTable = this.util.getParentElement(tdElement, 'TABLE');\n\n    const selectedCells = tablePlugin._selectedTable.querySelectorAll('.se-table-selected-cell');\n\n    for (let i = 0, len = selectedCells.length; i < len; i++) {\n      this.util.removeClass(selectedCells[i], 'se-table-selected-cell');\n    }\n\n    this.util.addClass(tdElement, 'se-table-selected-cell');\n    tablePlugin._bindOnSelect = tablePlugin._onCellMultiSelect.bind(this);\n    tablePlugin._bindOffSelect = tablePlugin._offCellMultiSelect.bind(this);\n\n    if (!shift) {\n      this._wd.addEventListener('mousemove', tablePlugin._bindOnSelect, false);\n    } else {\n      tablePlugin._bindOffShift = function () {\n        this.controllersOn(this.context.table.resizeDiv, this.context.table.tableController, this.plugins.table.init.bind(this), tdElement, 'table');\n        if (!tablePlugin._ref) this.controllersOff();\n      }.bind(this);\n\n      this._wd.addEventListener('keyup', tablePlugin._bindOffShift, false);\n\n      this._wd.addEventListener('mousedown', tablePlugin._bindOnSelect, false);\n    }\n\n    this._wd.addEventListener('mouseup', tablePlugin._bindOffSelect, false);\n\n    tablePlugin._initBind = tablePlugin.init.bind(this);\n\n    this._wd.addEventListener('touchmove', tablePlugin._initBind, false);\n  },\n  onClick_tableController: function (e) {\n    e.stopPropagation();\n    const target = e.target.getAttribute('data-command') ? e.target : e.target.parentNode;\n    if (target.getAttribute('disabled')) return;\n    const command = target.getAttribute('data-command');\n    const value = target.getAttribute('data-value');\n    const option = target.getAttribute('data-option');\n    const tablePlugin = this.plugins.table;\n\n    if (typeof tablePlugin._closeSplitMenu === 'function') {\n      tablePlugin._closeSplitMenu();\n\n      if (command === 'onsplit') return;\n    }\n\n    if (!command) return;\n    e.preventDefault();\n    const contextTable = this.context.table;\n\n    switch (command) {\n      case 'insert':\n      case 'delete':\n        tablePlugin.editTable.call(this, value, option);\n        break;\n\n      case 'header':\n        tablePlugin.toggleHeader.call(this);\n        break;\n\n      case 'onsplit':\n        tablePlugin.openSplitMenu.call(this);\n        break;\n\n      case 'split':\n        tablePlugin.splitCells.call(this, value);\n        break;\n\n      case 'merge':\n        tablePlugin.mergeCells.call(this);\n        break;\n\n      case 'resize':\n        contextTable._maxWidth = !contextTable._maxWidth;\n        tablePlugin.setTableStyle.call(this, 'width');\n        tablePlugin.setPositionControllerTop.call(this, contextTable._element);\n        tablePlugin.setPositionControllerDiv.call(this, contextTable._tdElement, tablePlugin._shift);\n        break;\n\n      case 'layout':\n        contextTable._fixedColumn = !contextTable._fixedColumn;\n        tablePlugin.setTableStyle.call(this, 'column');\n        tablePlugin.setPositionControllerTop.call(this, contextTable._element);\n        tablePlugin.setPositionControllerDiv.call(this, contextTable._tdElement, tablePlugin._shift);\n        break;\n\n      case 'remove':\n        const emptyDiv = contextTable._element.parentNode;\n        this.util.removeItem(contextTable._element);\n        this.controllersOff();\n        if (emptyDiv !== this.context.element.wysiwyg) this.util.removeItemAllParents(emptyDiv, function (current) {\n          return current.childNodes.length === 0;\n        }, null);\n        this.focus();\n    } // history stack\n\n\n    this.history.push(false);\n  }\n};","map":{"version":3,"names":["name","display","add","core","targetElement","context","contextTable","table","_element","_tdElement","_trElement","_trElements","_tableXY","_maxWidth","_fixedColumn","_rtl","options","rtl","cellControllerTop","tableCellControllerPosition","resizeText","headerButton","mergeButton","splitButton","splitMenu","maxText","lang","controller","maxSize","minText","minSize","_physical_cellCnt","_logical_cellCnt","_rowCnt","_rowIndex","_physical_cellIndex","_logical_cellIndex","_current_colSpan","_current_rowSpan","icons","expansion","reduction","listDiv","setSubmenu","tablePicker","querySelector","tableHighlight","tableUnHighlight","tableDisplay","style","left","tableController","setController_table","resizeButton","columnFixedButton","resizeDiv","setController_tableEditor","insertRowAboveButton","insertRowBelowButton","addEventListener","onMouseMove_tablePicker","bind","appendTable","onClick_tableController","initMenuTarget","element","relative","appendChild","util","createElement","className","innerHTML","tableResize","fixed_column_width","fixedColumnWidth","table_header","tableHeader","delete","remove","insert_row_above","insertRowAbove","insert_row_below","insertRowBelow","delete_row","deleteRow","merge_cell","mergeCells","insert_column_left","insertColumnBefore","insert_column_right","insertColumnAfter","delete_column","deleteColumn","split_cell","splitCells","VerticalSplit","HorizontalSplit","oTable","createCells","plugins","x","y","tableHTML","call","changed","insertComponent","firstTd","setRange","reset_table_picker","nodeName","cnt","returnElement","toLowerCase","cellsHTML","cell","e","stopPropagation","_w","Math","ceil","offsetX","offsetY","width","height","changeTxt","highlight","unHighlight","submenuOff","init","tablePlugin","_removeEvents","_selectedTable","selectedCells","querySelectorAll","i","len","length","removeClass","_toggleEditor","_shift","_selectedCells","_ref","_fixedCell","_selectedCell","_fixedCellName","call_controller_tableEdit","tdElement","getSelection","isCollapsed","controllersOff","tableElement","getParentElement","hasClass","tableLayout","setTableStyle","setPositionControllerTop","setPositionControllerDiv","controllersOn","setControllerPosition","top","reset","setCellInfo","offsetWidth","test","firstElementChild","addClass","parentNode","rows","cellIndex","cellCnt","cells","colSpan","rowIndex","rowSpan","rowSpanArr","spanIndex","c","cLen","cs","rs","logcalIndex","r","arr","row","index","splice","push","concat","sort","a","b","editTable","type","option","isRow","tableAttr","nextElementSibling","positionCell","removeCells","editRow","firstRow","editCell","rightCell","children","removeItem","positionResetElement","up","originRowIndex","sign","next","spanCells","cloneNode","spanCell","shift","insertBefore","newRow","insertRow","passCell","removeCell","removeSpanArr","insertIndex","newCell","applySpan","cellColSpan","removeIndex","lastCell","getOverlapRangeAtIndex","removeFirst","removeEnd","rLen","getArrayIndex","rowSpanCell","_closeSplitMenu","openSplitMenu","removeDocEvent","addDocEvent","direction","vertical","currentCell","currentRow","currentColSpan","floor","currentRowSpan","newRowSpan","nextRowIndex","nextRow","nextCells","physicalIndex","focusEdge","ref","mergeCell","emptyRowFirst","emptyRowLast","ce","re","mergeHTML","ch","isFormatElement","onlyZeroWidthSpace","textContent","rowIndexFirst","rowIndexLast","removeRows","setActiveButton","toggleHeader","active","header","toggleClass","styles","icon","span","sizeIcon","text","indexOf","changeElement","fixedCell","selectedCell","setAttribute","removeAttribute","_bindOnSelect","_bindOffSelect","_bindOffShift","enabled","wysiwyg","_offCellMultiSelect","_initBind","_wd","removeEventListener","_onCellMultiSelect","_antiBlur","target","isCell","_setMultiCells","startCell","endCell","findSelectedCell","_i","newCs","newCe","newRs","newRe","onTableCellMultiSelect","getAttribute","command","value","preventDefault","emptyDiv","removeItemAllParents","current","childNodes","focus","history"],"sources":["/Users/jirayuyungmeesuk/Desktop/ v2/client/node_modules/suneditor/src/plugins/submenu/table.js"],"sourcesContent":["/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\r\n'use strict';\r\n\r\nexport default {\r\n    name: 'table',\r\n    display: 'submenu',\r\n    add: function (core, targetElement) {\r\n        const context = core.context;\r\n        let contextTable = context.table = {\r\n            _element: null,\r\n            _tdElement: null,\r\n            _trElement: null,\r\n            _trElements: null,\r\n            _tableXY: [],\r\n            _maxWidth: true,\r\n            _fixedColumn: false,\r\n            _rtl: core.options.rtl,\r\n            cellControllerTop: core.options.tableCellControllerPosition === 'top',\r\n            resizeText: null,\r\n            headerButton: null,\r\n            mergeButton: null,\r\n            splitButton: null,\r\n            splitMenu: null,\r\n            maxText: core.lang.controller.maxSize,\r\n            minText: core.lang.controller.minSize,\r\n            _physical_cellCnt: 0,\r\n            _logical_cellCnt: 0,\r\n            _rowCnt: 0,\r\n            _rowIndex: 0,\r\n            _physical_cellIndex: 0,\r\n            _logical_cellIndex: 0,\r\n            _current_colSpan: 0,\r\n            _current_rowSpan: 0,\r\n            icons: {\r\n                expansion: core.icons.expansion,\r\n                reduction: core.icons.reduction\r\n            }\r\n        };\r\n\r\n        /** set submenu */\r\n        let listDiv = this.setSubmenu(core);\r\n        let tablePicker = listDiv.querySelector('.se-controller-table-picker');\r\n\r\n        contextTable.tableHighlight = listDiv.querySelector('.se-table-size-highlighted');\r\n        contextTable.tableUnHighlight = listDiv.querySelector('.se-table-size-unhighlighted');\r\n        contextTable.tableDisplay = listDiv.querySelector('.se-table-size-display');\r\n        if (core.options.rtl) contextTable.tableHighlight.style.left = (10 * 18 - 13) + 'px';\r\n\r\n        /** set table controller */\r\n        let tableController = this.setController_table(core);\r\n        contextTable.tableController = tableController;\r\n        contextTable.resizeButton = tableController.querySelector('._se_table_resize');\r\n        contextTable.resizeText = tableController.querySelector('._se_table_resize > span > span');\r\n        contextTable.columnFixedButton = tableController.querySelector('._se_table_fixed_column');\r\n        contextTable.headerButton = tableController.querySelector('._se_table_header');\r\n\r\n        /** set resizing */\r\n        let resizeDiv = this.setController_tableEditor(core, contextTable.cellControllerTop);\r\n        contextTable.resizeDiv = resizeDiv;\r\n        contextTable.splitMenu = resizeDiv.querySelector('.se-btn-group-sub');\r\n        contextTable.mergeButton = resizeDiv.querySelector('._se_table_merge_button');\r\n        contextTable.splitButton = resizeDiv.querySelector('._se_table_split_button');\r\n        contextTable.insertRowAboveButton = resizeDiv.querySelector('._se_table_insert_row_a');\r\n        contextTable.insertRowBelowButton = resizeDiv.querySelector('._se_table_insert_row_b');\r\n        \r\n        /** add event listeners */\r\n        tablePicker.addEventListener('mousemove', this.onMouseMove_tablePicker.bind(core, contextTable));\r\n        tablePicker.addEventListener('click', this.appendTable.bind(core));\r\n        resizeDiv.addEventListener('click', this.onClick_tableController.bind(core));\r\n        tableController.addEventListener('click', this.onClick_tableController.bind(core));\r\n\r\n        /** append target button menu */\r\n        core.initMenuTarget(this.name, targetElement, listDiv);\r\n\r\n        /** append controller */\r\n        context.element.relative.appendChild(resizeDiv);\r\n        context.element.relative.appendChild(tableController);\r\n\r\n        /** empty memory */\r\n        listDiv = null, tablePicker = null, resizeDiv = null, tableController = null, contextTable = null;\r\n    },\r\n\r\n    setSubmenu: function (core) {\r\n        const listDiv = core.util.createElement('DIV');\r\n        listDiv.className = 'se-submenu se-selector-table';\r\n        listDiv.innerHTML = '' +\r\n            '<div class=\"se-table-size\">' +\r\n                '<div class=\"se-table-size-picker se-controller-table-picker\"></div>' +\r\n                '<div class=\"se-table-size-highlighted\"></div>' +\r\n                '<div class=\"se-table-size-unhighlighted\"></div>' +\r\n            '</div>' +\r\n            '<div class=\"se-table-size-display\">1 x 1</div>';\r\n\r\n        return listDiv;\r\n    },\r\n\r\n    setController_table: function (core) {\r\n        const lang = core.lang;\r\n        const icons = core.icons;\r\n        const tableResize = core.util.createElement('DIV');\r\n\r\n        tableResize.className = 'se-controller se-controller-table';\r\n        tableResize.innerHTML = '' +\r\n            '<div>' +\r\n                '<div class=\"se-btn-group\">' +\r\n                    '<button type=\"button\" data-command=\"resize\" class=\"se-btn se-tooltip _se_table_resize\">' +\r\n                        icons.expansion +\r\n                        '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.maxSize + '</span></span>' +\r\n                    '</button>' +\r\n                    '<button type=\"button\" data-command=\"layout\" class=\"se-btn se-tooltip _se_table_fixed_column\">' +\r\n                        icons.fixed_column_width +\r\n                        '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.fixedColumnWidth + '</span></span>' +\r\n                    '</button>' +\r\n                    '<button type=\"button\" data-command=\"header\" class=\"se-btn se-tooltip _se_table_header\">' +\r\n                        icons.table_header +\r\n                        '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.tableHeader + '</span></span>' +\r\n                    '</button>' +\r\n                    '<button type=\"button\" data-command=\"remove\" class=\"se-btn se-tooltip\">' +\r\n                        icons.delete +\r\n                        '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.remove + '</span></span>' +\r\n                    '</button>' +\r\n                '</div>' +\r\n            '</div>';\r\n\r\n        return tableResize;\r\n    },\r\n\r\n    setController_tableEditor: function (core, cellControllerTop) {\r\n        const lang = core.lang;\r\n        const icons = core.icons;\r\n        const tableResize = core.util.createElement('DIV');\r\n\r\n        tableResize.className = 'se-controller se-controller-table-cell';\r\n        tableResize.innerHTML = (cellControllerTop ? '' : '<div class=\"se-arrow se-arrow-up\"></div>') +\r\n            '<div class=\"se-btn-group\">' +\r\n                '<button type=\"button\" data-command=\"insert\" data-value=\"row\" data-option=\"up\" class=\"se-btn se-tooltip _se_table_insert_row_a\">' +\r\n                    icons.insert_row_above +\r\n                    '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.insertRowAbove + '</span></span>' +\r\n                '</button>' +\r\n                '<button type=\"button\" data-command=\"insert\" data-value=\"row\" data-option=\"down\" class=\"se-btn se-tooltip _se_table_insert_row_b\">' +\r\n                    icons.insert_row_below +\r\n                    '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.insertRowBelow + '</span></span>' +\r\n                '</button>' +\r\n                '<button type=\"button\" data-command=\"delete\" data-value=\"row\" class=\"se-btn se-tooltip\">' +\r\n                    icons.delete_row +\r\n                    '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.deleteRow + '</span></span>' +\r\n                '</button>' +\r\n                '<button type=\"button\" data-command=\"merge\" class=\"_se_table_merge_button se-btn se-tooltip\" disabled>' +\r\n                    icons.merge_cell +\r\n                    '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.mergeCells + '</span></span>' +\r\n                '</button>' +\r\n            '</div>' +\r\n            '<div class=\"se-btn-group\" style=\"padding-top: 0;\">' +\r\n                '<button type=\"button\" data-command=\"insert\" data-value=\"cell\" data-option=\"left\" class=\"se-btn se-tooltip\">' +\r\n                    icons.insert_column_left +\r\n                    '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.insertColumnBefore + '</span></span>' +\r\n                '</button>' +\r\n                '<button type=\"button\" data-command=\"insert\" data-value=\"cell\" data-option=\"right\" class=\"se-btn se-tooltip\">' +\r\n                    icons.insert_column_right +\r\n                    '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.insertColumnAfter + '</span></span>' +\r\n                '</button>' +\r\n                '<button type=\"button\" data-command=\"delete\" data-value=\"cell\" class=\"se-btn se-tooltip\">' +\r\n                    icons.delete_column +\r\n                    '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.deleteColumn + '</span></span>' +\r\n                '</button>' +\r\n                '<button type=\"button\" data-command=\"onsplit\" class=\"_se_table_split_button se-btn se-tooltip\">' +\r\n                    icons.split_cell +\r\n                    '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.splitCells + '</span></span>' +\r\n                '</button>' +\r\n                '<div class=\"se-btn-group-sub sun-editor-common se-list-layer se-table-split\">' +\r\n                    '<div class=\"se-list-inner\">' +\r\n                        '<ul class=\"se-list-basic\">' +\r\n                            '<li class=\"se-btn-list\" data-command=\"split\" data-value=\"vertical\" style=\"line-height:32px;\" title=\"' + lang.controller.VerticalSplit + '\" aria-label=\"' + lang.controller.VerticalSplit + '\">' + \r\n                                lang.controller.VerticalSplit + '</li>' +\r\n                            '<li class=\"se-btn-list\" data-command=\"split\" data-value=\"horizontal\" style=\"line-height:32px;\" title=\"' + lang.controller.HorizontalSplit + '\" aria-label=\"' + lang.controller.HorizontalSplit + '\">' + \r\n                                lang.controller.HorizontalSplit + '</li>' +\r\n                        '</ul>' +\r\n                    '</div>' +\r\n                '</div>' +\r\n            '</div>';\r\n\r\n        return tableResize;\r\n    },\r\n\r\n    appendTable: function () {\r\n        const oTable = this.util.createElement('TABLE');\r\n        const createCells = this.plugins.table.createCells;\r\n\r\n        const x = this.context.table._tableXY[0];\r\n        let y = this.context.table._tableXY[1];\r\n        let tableHTML = '<tbody>';\r\n        while (y > 0) {\r\n            tableHTML += '<tr>' + createCells.call(this, 'td', x) + '</tr>';\r\n            --y;\r\n        }\r\n        tableHTML += '</tbody>';\r\n        oTable.innerHTML = tableHTML;\r\n\r\n        const changed = this.insertComponent(oTable, false, true, false);\r\n        \r\n        if (changed) {\r\n            const firstTd = oTable.querySelector('td div');\r\n            this.setRange(firstTd, 0, firstTd, 0);\r\n            this.plugins.table.reset_table_picker.call(this);\r\n        }\r\n    },\r\n\r\n    createCells: function (nodeName, cnt, returnElement) {\r\n        nodeName = nodeName.toLowerCase();\r\n\r\n        if (!returnElement) {\r\n            let cellsHTML = '';\r\n            while (cnt > 0) {\r\n                cellsHTML += '<' +nodeName + '><div><br></div></' + nodeName + '>';\r\n                cnt--;\r\n            }\r\n            return cellsHTML;\r\n        } else {\r\n            const cell = this.util.createElement(nodeName);\r\n            cell.innerHTML = '<div><br></div>';\r\n            return cell;\r\n        }\r\n    },\r\n\r\n    onMouseMove_tablePicker: function (contextTable, e) {\r\n        e.stopPropagation();\r\n\r\n        let x = this._w.Math.ceil(e.offsetX / 18);\r\n        let y = this._w.Math.ceil(e.offsetY / 18);\r\n        x = x < 1 ? 1 : x;\r\n        y = y < 1 ? 1 : y;\r\n        \r\n        if (contextTable._rtl) {\r\n            contextTable.tableHighlight.style.left = (x * 18 - 13) + 'px';\r\n            x = 11 - x;\r\n        }\r\n        \r\n        contextTable.tableHighlight.style.width = x + 'em';\r\n        contextTable.tableHighlight.style.height = y + 'em';\r\n\r\n        // let x_u = x < 5 ? 5 : (x > 9 ? 10 : x + 1);\r\n        // let y_u = y < 5 ? 5 : (y > 9 ? 10 : y + 1);\r\n        // contextTable.tableUnHighlight.style.width = x_u + 'em';\r\n        // contextTable.tableUnHighlight.style.height = y_u + 'em';\r\n\r\n        this.util.changeTxt(contextTable.tableDisplay, x + ' x ' + y);\r\n        contextTable._tableXY = [x, y];\r\n    },\r\n\r\n    reset_table_picker: function () {\r\n        if (!this.context.table.tableHighlight) return;\r\n\r\n        const highlight = this.context.table.tableHighlight.style;\r\n        const unHighlight = this.context.table.tableUnHighlight.style;\r\n\r\n        highlight.width = '1em';\r\n        highlight.height = '1em';\r\n        unHighlight.width = '10em';\r\n        unHighlight.height = '10em';\r\n\r\n        this.util.changeTxt(this.context.table.tableDisplay, '1 x 1');\r\n        this.submenuOff();\r\n    },\r\n\r\n    init: function () {\r\n        const contextTable = this.context.table;\r\n        const tablePlugin = this.plugins.table;\r\n\r\n        tablePlugin._removeEvents.call(this);\r\n\r\n        if (tablePlugin._selectedTable) {\r\n            const selectedCells = tablePlugin._selectedTable.querySelectorAll('.se-table-selected-cell');\r\n            for (let i = 0, len = selectedCells.length; i < len; i++) {\r\n                this.util.removeClass(selectedCells[i], 'se-table-selected-cell');\r\n            }\r\n        }\r\n\r\n        tablePlugin._toggleEditor.call(this, true);\r\n\r\n        contextTable._element = null;\r\n        contextTable._tdElement = null;\r\n        contextTable._trElement = null;\r\n        contextTable._trElements = null;\r\n        contextTable._tableXY = [];\r\n        contextTable._maxWidth = true;\r\n        contextTable._fixedColumn = false;\r\n        contextTable._physical_cellCnt = 0;\r\n        contextTable._logical_cellCnt = 0;\r\n        contextTable._rowCnt = 0;\r\n        contextTable._rowIndex = 0;\r\n        contextTable._physical_cellIndex = 0;\r\n        contextTable._logical_cellIndex = 0;\r\n        contextTable._current_colSpan = 0;\r\n        contextTable._current_rowSpan = 0;\r\n\r\n        tablePlugin._shift = false;\r\n        tablePlugin._selectedCells = null;\r\n        tablePlugin._selectedTable = null;\r\n        tablePlugin._ref = null;\r\n\r\n        tablePlugin._fixedCell = null;\r\n        tablePlugin._selectedCell = null;\r\n        tablePlugin._fixedCellName = null;\r\n    },\r\n\r\n    /** table edit controller */\r\n    call_controller_tableEdit: function (tdElement) {\r\n        const tablePlugin = this.plugins.table;\r\n        const contextTable = this.context.table;\r\n\r\n        if (!this.getSelection().isCollapsed && !tablePlugin._selectedCell) {\r\n            this.controllersOff();\r\n            this.util.removeClass(tdElement, 'se-table-selected-cell');\r\n            return;\r\n        }\r\n\r\n        const tableElement = contextTable._element || this.plugins.table._selectedTable || this.util.getParentElement(tdElement, 'TABLE');\r\n        contextTable._maxWidth = this.util.hasClass(tableElement, 'se-table-size-100') || tableElement.style.width === '100%' || (!tableElement.style.width && !this.util.hasClass(tableElement, 'se-table-size-auto'));\r\n        contextTable._fixedColumn = this.util.hasClass(tableElement, 'se-table-layout-fixed') || tableElement.style.tableLayout === 'fixed';\r\n        tablePlugin.setTableStyle.call(this, contextTable._maxWidth ? 'width|column' : 'width');\r\n        \r\n        tablePlugin.setPositionControllerTop.call(this, tableElement);\r\n        tablePlugin.setPositionControllerDiv.call(this, tdElement, tablePlugin._shift);\r\n        \r\n        if (!tablePlugin._shift) this.controllersOn(contextTable.resizeDiv, contextTable.tableController, tablePlugin.init.bind(this), tdElement, 'table');\r\n    },\r\n\r\n    setPositionControllerTop: function (tableElement) {\r\n        this.setControllerPosition(this.context.table.tableController, tableElement, 'top', {left: 0, top: 0});\r\n    },\r\n\r\n    setPositionControllerDiv: function (tdElement, reset) {\r\n        const contextTable = this.context.table;\r\n        const resizeDiv = contextTable.resizeDiv;\r\n        \r\n        this.plugins.table.setCellInfo.call(this, tdElement, reset);\r\n        \r\n        if (contextTable.cellControllerTop) {\r\n            this.setControllerPosition(resizeDiv, contextTable._element, 'top', {left: contextTable.tableController.offsetWidth, top: 0});\r\n        } else {\r\n            this.setControllerPosition(resizeDiv, tdElement, 'bottom', {left: 0, top: 0});\r\n        }\r\n    },\r\n\r\n    setCellInfo: function (tdElement, reset) {\r\n        const contextTable = this.context.table;\r\n        const table = contextTable._element = this.plugins.table._selectedTable || this.util.getParentElement(tdElement, 'TABLE');\r\n\r\n        if (/THEAD/i.test(table.firstElementChild.nodeName)) {\r\n            this.util.addClass(contextTable.headerButton, 'active');\r\n        } else {\r\n            this.util.removeClass(contextTable.headerButton, 'active');\r\n        }\r\n\r\n        if (reset || contextTable._physical_cellCnt === 0) {\r\n            if (contextTable._tdElement !== tdElement) {\r\n                contextTable._tdElement = tdElement;\r\n                contextTable._trElement = tdElement.parentNode;\r\n            }\r\n\r\n            const rows = contextTable._trElements = table.rows;\r\n            const cellIndex = tdElement.cellIndex;\r\n\r\n            let cellCnt = 0;\r\n            for (let i = 0, cells = rows[0].cells, len = rows[0].cells.length; i < len; i++) {\r\n                cellCnt += cells[i].colSpan;\r\n            }\r\n\r\n            // row cnt, row index\r\n            const rowIndex = contextTable._rowIndex = contextTable._trElement.rowIndex;\r\n            contextTable._rowCnt = rows.length;\r\n\r\n            // cell cnt, physical cell index\r\n            contextTable._physical_cellCnt = contextTable._trElement.cells.length;\r\n            contextTable._logical_cellCnt = cellCnt;\r\n            contextTable._physical_cellIndex = cellIndex;\r\n\r\n            // span\r\n            contextTable._current_colSpan = contextTable._tdElement.colSpan - 1;\r\n            contextTable._current_rowSpan - contextTable._trElement.cells[cellIndex].rowSpan - 1;\r\n\r\n            // find logcal cell index\r\n            let rowSpanArr = [];\r\n            let spanIndex = [];\r\n            for (let i = 0, cells, colSpan; i <= rowIndex; i++) {\r\n                cells = rows[i].cells;\r\n                colSpan = 0;\r\n                for (let c = 0, cLen = cells.length, cell, cs, rs, logcalIndex; c < cLen; c++) {\r\n                    cell = cells[c];\r\n                    cs = cell.colSpan - 1;\r\n                    rs = cell.rowSpan - 1;\r\n                    logcalIndex = c + colSpan;\r\n\r\n                    if (spanIndex.length > 0) {\r\n                        for (let r = 0, arr; r < spanIndex.length; r++) {\r\n                            arr = spanIndex[r];\r\n                            if (arr.row > i) continue;\r\n                            if (logcalIndex >= arr.index) {\r\n                                colSpan += arr.cs;\r\n                                logcalIndex += arr.cs;\r\n                                arr.rs -= 1;\r\n                                arr.row = i + 1;\r\n                                if (arr.rs < 1) {\r\n                                    spanIndex.splice(r, 1);\r\n                                    r--;\r\n                                }  \r\n                            } else if (c === cLen - 1) {\r\n                                arr.rs -= 1;\r\n                                arr.row = i + 1;\r\n                                if (arr.rs < 1) {\r\n                                    spanIndex.splice(r, 1);\r\n                                    r--;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // logcal cell index\r\n                    if (i === rowIndex && c === cellIndex) {\r\n                        contextTable._logical_cellIndex = logcalIndex;\r\n                        break;\r\n                    }\r\n\r\n                    if (rs > 0) {\r\n                        rowSpanArr.push({\r\n                            index: logcalIndex,\r\n                            cs: cs + 1,\r\n                            rs: rs,\r\n                            row: -1\r\n                        });\r\n                    }\r\n                    \r\n                    colSpan += cs;\r\n                }\r\n\r\n                spanIndex = spanIndex.concat(rowSpanArr).sort(function (a, b) {return a.index - b.index;});\r\n                rowSpanArr = [];\r\n            }\r\n\r\n            rowSpanArr = null;\r\n            spanIndex = null;\r\n        }\r\n    },\r\n\r\n    editTable: function (type, option) {\r\n        const tablePlugin = this.plugins.table;\r\n        const contextTable = this.context.table;\r\n        const table = contextTable._element;\r\n        const isRow = type === 'row';\r\n\r\n        if (isRow) {\r\n            const tableAttr = contextTable._trElement.parentNode;\r\n            if (/^THEAD$/i.test(tableAttr.nodeName)) {\r\n                if (option === 'up') {\r\n                    return;\r\n                } else if (!tableAttr.nextElementSibling || !/^TBODY$/i.test(tableAttr.nextElementSibling.nodeName)) {\r\n                    table.innerHTML += '<tbody><tr>' + tablePlugin.createCells.call(this, 'td', contextTable._logical_cellCnt, false) + '</tr></tbody>';\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        // multi\r\n        if (tablePlugin._ref) {\r\n            const positionCell = contextTable._tdElement;\r\n            const selectedCells = tablePlugin._selectedCells;\r\n            // multi - row\r\n            if (isRow) {\r\n                // remove row\r\n                if (!option) {\r\n                    let row = selectedCells[0].parentNode;\r\n                    const removeCells = [selectedCells[0]];\r\n\r\n                    for (let i = 1, len = selectedCells.length, cell; i < len; i++) {\r\n                        cell = selectedCells[i];\r\n                        if (row !== cell.parentNode) {\r\n                            removeCells.push(cell);\r\n                            row = cell.parentNode;\r\n                        }\r\n                    }\r\n\r\n                    for (let i = 0, len = removeCells.length; i < len; i++) {\r\n                        tablePlugin.setCellInfo.call(this, removeCells[i], true);\r\n                        tablePlugin.editRow.call(this, option);\r\n                    }\r\n                } else { // edit row\r\n                    tablePlugin.setCellInfo.call(this, option === 'up' ? selectedCells[0] : selectedCells[selectedCells.length - 1], true);\r\n                    tablePlugin.editRow.call(this, option, positionCell);\r\n                }\r\n            } else { // multi - cell\r\n                const firstRow = selectedCells[0].parentNode;\r\n                // remove cell\r\n                if (!option) {\r\n                    const removeCells = [selectedCells[0]];\r\n                    \r\n                    for (let i = 1, len = selectedCells.length, cell; i < len; i++) {\r\n                        cell = selectedCells[i];\r\n                        if (firstRow === cell.parentNode) {\r\n                            removeCells.push(cell);\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    for (let i = 0, len = removeCells.length; i < len; i++) {\r\n                        tablePlugin.setCellInfo.call(this, removeCells[i], true);\r\n                        tablePlugin.editCell.call(this, option);\r\n                    }\r\n                } else { // edit cell\r\n                    let rightCell = null;\r\n\r\n                    for (let i = 0, len = selectedCells.length - 1; i < len; i++) {\r\n                        if (firstRow !== selectedCells[i + 1].parentNode) {\r\n                            rightCell = selectedCells[i];\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    tablePlugin.setCellInfo.call(this, option === 'left' ? selectedCells[0] : rightCell || selectedCells[0], true);\r\n                    tablePlugin.editCell.call(this, option, positionCell);\r\n                }\r\n            }\r\n\r\n            if (!option) tablePlugin.init.call(this);\r\n        } // one\r\n        else {\r\n            tablePlugin[isRow ? 'editRow' : 'editCell'].call(this, option);\r\n        }\r\n\r\n        // after remove\r\n        if (!option) {\r\n            const children = table.children;\r\n            for (let i = 0; i < children.length; i++) {\r\n                if (children[i].children.length === 0) {\r\n                    this.util.removeItem(children[i]);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            if (table.children.length === 0) this.util.removeItem(table);\r\n        }\r\n    },\r\n\r\n    editRow: function (option, positionResetElement) {\r\n        const contextTable = this.context.table;\r\n        const remove = !option;\r\n\r\n        const up = option === 'up';\r\n        const originRowIndex = contextTable._rowIndex;\r\n        const rowIndex = remove || up ? originRowIndex : originRowIndex + contextTable._current_rowSpan + 1;\r\n        const sign = remove ? -1 : 1;\r\n        \r\n        const rows = contextTable._trElements;\r\n        let cellCnt = contextTable._logical_cellCnt;\r\n\r\n        for (let i = 0, len = originRowIndex + (remove ? -1 : 0), cell; i <= len; i++) {\r\n            cell = rows[i].cells;\r\n            if (cell.length === 0) return;\r\n            \r\n            for (let c = 0, cLen = cell.length, rs, cs; c < cLen; c++) {\r\n                rs = cell[c].rowSpan;\r\n                cs = cell[c].colSpan;\r\n                if (rs < 2 && cs < 2) continue;\r\n\r\n                if (rs + i > rowIndex && rowIndex > i) {\r\n                    cell[c].rowSpan = rs + sign;\r\n                    cellCnt -= cs;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (remove) {\r\n            const next = rows[originRowIndex + 1];\r\n            if (next) {\r\n                const spanCells = [];\r\n                let cells = rows[originRowIndex].cells;\r\n                let colSpan = 0;\r\n\r\n                for (let i = 0, len = cells.length, cell, logcalIndex; i < len; i++) {\r\n                    cell = cells[i];\r\n                    logcalIndex = i + colSpan;\r\n                    colSpan += cell.colSpan - 1;\r\n\r\n                    if (cell.rowSpan > 1) {\r\n                        cell.rowSpan -= 1;\r\n                        spanCells.push({cell: cell.cloneNode(false), index: logcalIndex});\r\n                    }\r\n                }\r\n\r\n                if (spanCells.length > 0) {\r\n                    let spanCell = spanCells.shift();\r\n                    cells = next.cells;\r\n                    colSpan = 0;\r\n\r\n                    for (let i = 0, len = cells.length, cell, logcalIndex; i < len; i++) {\r\n                        cell = cells[i];\r\n                        logcalIndex = i + colSpan;\r\n                        colSpan += cell.colSpan - 1;\r\n    \r\n                        if (logcalIndex >= spanCell.index) {\r\n                            i--, colSpan--;\r\n                            colSpan += spanCell.cell.colSpan - 1;\r\n                            next.insertBefore(spanCell.cell, cell);\r\n                            spanCell = spanCells.shift();\r\n                            if (!spanCell) break;\r\n                        }\r\n                    }\r\n\r\n                    if (spanCell) {\r\n                        next.appendChild(spanCell.cell);\r\n                        for (let i = 0, len = spanCells.length; i < len; i++) {\r\n                            next.appendChild(spanCells[i].cell);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            contextTable._element.deleteRow(rowIndex);\r\n        } else {\r\n            const newRow = contextTable._element.insertRow(rowIndex);\r\n            newRow.innerHTML = this.plugins.table.createCells.call(this, 'td', cellCnt, false);\r\n        }\r\n\r\n        if (!remove) {\r\n            this.plugins.table.setPositionControllerDiv.call(this, positionResetElement || contextTable._tdElement, true);\r\n        } else {\r\n            this.controllersOff();\r\n        }\r\n    },\r\n\r\n    editCell: function (option, positionResetElement) {\r\n        const contextTable = this.context.table;\r\n        const util = this.util;\r\n        const remove = !option;\r\n\r\n        const left = option === 'left';\r\n        const colSpan = contextTable._current_colSpan;\r\n        const cellIndex = remove || left ? contextTable._logical_cellIndex : contextTable._logical_cellIndex + colSpan + 1;\r\n\r\n        const rows = contextTable._trElements;\r\n        let rowSpanArr = [];\r\n        let spanIndex = [];\r\n        let passCell = 0;\r\n        const removeCell = [];\r\n        const removeSpanArr = [];\r\n\r\n        for (let i = 0, len = contextTable._rowCnt, row, insertIndex, cells, newCell, applySpan, cellColSpan; i < len; i++) {\r\n            row = rows[i];\r\n            insertIndex = cellIndex;\r\n            applySpan = false;\r\n            cells = row.cells;\r\n            cellColSpan = 0;\r\n\r\n            for (let c = 0, cell, cLen = cells.length, rs, cs, removeIndex; c < cLen; c++) {\r\n                cell = cells[c];\r\n                if (!cell) break;\r\n\r\n                rs = cell.rowSpan - 1;\r\n                cs = cell.colSpan - 1;\r\n\r\n                if (!remove) {\r\n                    if (c >= insertIndex) break;\r\n                    if (cs > 0) {\r\n                        if (passCell < 1 && cs + c >= insertIndex) {\r\n                            cell.colSpan += 1;\r\n                            insertIndex = null;\r\n                            passCell = rs + 1;\r\n                            break;\r\n                        }\r\n\r\n                        insertIndex -= cs;\r\n                    }\r\n\r\n                    if (!applySpan) {\r\n                        for (let r = 0, arr; r < spanIndex.length; r++) {\r\n                            arr = spanIndex[r];\r\n                            insertIndex -= arr.cs;\r\n                            arr.rs -= 1;\r\n                            if (arr.rs < 1) {\r\n                                spanIndex.splice(r, 1);\r\n                                r--;\r\n                            }  \r\n                        }\r\n                        applySpan = true;\r\n                    }\r\n                } else {\r\n                    removeIndex = c + cellColSpan;\r\n\r\n                    if (spanIndex.length > 0) {\r\n                        const lastCell = !cells[c + 1];\r\n                        for (let r = 0, arr; r < spanIndex.length; r++) {\r\n                            arr = spanIndex[r];\r\n                            if (arr.row > i) continue;\r\n\r\n                            if (removeIndex >= arr.index) {\r\n                                cellColSpan += arr.cs;\r\n                                removeIndex = c + cellColSpan;\r\n                                arr.rs -= 1;\r\n                                arr.row = i + 1;\r\n                                if (arr.rs < 1) {\r\n                                    spanIndex.splice(r, 1);\r\n                                    r--;\r\n                                }  \r\n                            } else if (lastCell) {\r\n                                arr.rs -= 1;\r\n                                arr.row = i + 1;\r\n                                if (arr.rs < 1) {\r\n                                    spanIndex.splice(r, 1);\r\n                                    r--;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (rs > 0) {\r\n                        rowSpanArr.push({\r\n                            rs: rs,\r\n                            cs: cs + 1,\r\n                            index: removeIndex,\r\n                            row: -1\r\n                        });\r\n                    }\r\n\r\n                    if (removeIndex >= insertIndex && removeIndex + cs <= insertIndex + colSpan) {\r\n                        removeCell.push(cell);\r\n                    } else if (removeIndex <= insertIndex + colSpan && removeIndex + cs >= insertIndex) {\r\n                        cell.colSpan -= util.getOverlapRangeAtIndex(cellIndex, cellIndex + colSpan, removeIndex, removeIndex + cs); \r\n                    } else if (rs > 0 && (removeIndex < insertIndex || removeIndex + cs > insertIndex + colSpan)) {\r\n                        removeSpanArr.push({\r\n                            cell: cell,\r\n                            i: i,\r\n                            rs: i + rs\r\n                        });\r\n                    }\r\n\r\n                    cellColSpan += cs;\r\n                }\r\n            }\r\n\r\n            spanIndex = spanIndex.concat(rowSpanArr).sort(function (a, b) {return a.index - b.index;});\r\n            rowSpanArr = [];\r\n\r\n            if (!remove) {\r\n                if (passCell > 0) {\r\n                    passCell -= 1;\r\n                    continue;\r\n                }\r\n\r\n                if (insertIndex !== null && cells.length > 0) {\r\n                    newCell = this.plugins.table.createCells.call(this, cells[0].nodeName, 0, true);\r\n                    newCell = row.insertBefore(newCell, cells[insertIndex]);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (remove) {\r\n            let removeFirst, removeEnd;\r\n            for (let r = 0, rLen = removeCell.length, row; r < rLen; r++) {\r\n                row = removeCell[r].parentNode;\r\n                util.removeItem(removeCell[r]);\r\n                if (row.cells.length === 0) {\r\n                    if (!removeFirst) removeFirst = util.getArrayIndex(rows, row);\r\n                    removeEnd = util.getArrayIndex(rows, row);\r\n                    util.removeItem(row);\r\n                }\r\n            }\r\n\r\n            for (let c = 0, cLen = removeSpanArr.length, rowSpanCell; c < cLen; c++) {\r\n                rowSpanCell = removeSpanArr[c];\r\n                rowSpanCell.cell.rowSpan = util.getOverlapRangeAtIndex(removeFirst, removeEnd, rowSpanCell.i, rowSpanCell.rs);\r\n            }\r\n\r\n            this.controllersOff();\r\n        } else {\r\n            this.plugins.table.setPositionControllerDiv.call(this, positionResetElement || contextTable._tdElement, true);\r\n        }\r\n    },\r\n\r\n    _closeSplitMenu: null,\r\n    openSplitMenu: function () {\r\n        this.util.addClass(this.context.table.splitButton, 'on');\r\n        this.context.table.splitMenu.style.display = 'inline-table';\r\n\r\n        this.plugins.table._closeSplitMenu = function () {\r\n            this.util.removeClass(this.context.table.splitButton, 'on');\r\n            this.context.table.splitMenu.style.display = 'none';\r\n            this.removeDocEvent('click', this.plugins.table._closeSplitMenu);\r\n            this.plugins.table._closeSplitMenu = null;\r\n        }.bind(this);\r\n\r\n        this.addDocEvent('click', this.plugins.table._closeSplitMenu);\r\n    },\r\n\r\n    splitCells: function (direction) {\r\n        const util = this.util;\r\n        const vertical = direction === 'vertical';\r\n        const contextTable = this.context.table;\r\n        const currentCell = contextTable._tdElement;\r\n        const rows = contextTable._trElements;\r\n        const currentRow = contextTable._trElement;\r\n        const index = contextTable._logical_cellIndex;\r\n        const rowIndex = contextTable._rowIndex;\r\n        const newCell = this.plugins.table.createCells.call(this, currentCell.nodeName, 0, true);\r\n\r\n        // vertical\r\n        if (vertical) {\r\n            const currentColSpan = currentCell.colSpan;\r\n            newCell.rowSpan = currentCell.rowSpan;\r\n\r\n            // colspan > 1\r\n            if (currentColSpan > 1) {\r\n                newCell.colSpan = this._w.Math.floor(currentColSpan/2);\r\n                currentCell.colSpan = currentColSpan - newCell.colSpan;\r\n                currentRow.insertBefore(newCell, currentCell.nextElementSibling);\r\n            } else { // colspan - 1\r\n                let rowSpanArr = [];\r\n                let spanIndex = [];\r\n\r\n                for (let i = 0, len = contextTable._rowCnt, cells, colSpan; i < len; i++) {\r\n                    cells = rows[i].cells;\r\n                    colSpan = 0;\r\n                    for (let c = 0, cLen = cells.length, cell, cs, rs, logcalIndex; c < cLen; c++) {\r\n                        cell = cells[c];\r\n                        cs = cell.colSpan - 1;\r\n                        rs = cell.rowSpan - 1;\r\n                        logcalIndex = c + colSpan;\r\n\r\n                        if (spanIndex.length > 0) {\r\n                            for (let r = 0, arr; r < spanIndex.length; r++) {\r\n                                arr = spanIndex[r];\r\n                                if (arr.row > i) continue;\r\n                                if (logcalIndex >= arr.index) {\r\n                                    colSpan += arr.cs;\r\n                                    logcalIndex += arr.cs;\r\n                                    arr.rs -= 1;\r\n                                    arr.row = i + 1;\r\n                                    if (arr.rs < 1) {\r\n                                        spanIndex.splice(r, 1);\r\n                                        r--;\r\n                                    }  \r\n                                } else if (c === cLen - 1) {\r\n                                    arr.rs -= 1;\r\n                                    arr.row = i + 1;\r\n                                    if (arr.rs < 1) {\r\n                                        spanIndex.splice(r, 1);\r\n                                        r--;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (logcalIndex <= index && rs > 0) {\r\n                            rowSpanArr.push({\r\n                                index: logcalIndex,\r\n                                cs: cs + 1,\r\n                                rs: rs,\r\n                                row: -1\r\n                            });\r\n                        }\r\n\r\n                        if (cell !== currentCell && logcalIndex <= index && logcalIndex + cs >= index + currentColSpan - 1) {\r\n                            cell.colSpan += 1;\r\n                            break;\r\n                        }\r\n\r\n                        if (logcalIndex > index) break;\r\n                        \r\n                        colSpan += cs;\r\n                    }\r\n\r\n                    spanIndex = spanIndex.concat(rowSpanArr).sort(function (a, b) {return a.index - b.index;});\r\n                    rowSpanArr = [];\r\n                }\r\n\r\n                currentRow.insertBefore(newCell, currentCell.nextElementSibling);\r\n            }\r\n        } else { // horizontal\r\n            const currentRowSpan = currentCell.rowSpan;\r\n            newCell.colSpan = currentCell.colSpan;\r\n\r\n            // rowspan > 1\r\n            if (currentRowSpan > 1) {\r\n                newCell.rowSpan = this._w.Math.floor(currentRowSpan/2);\r\n                const newRowSpan = currentRowSpan - newCell.rowSpan;\r\n\r\n                const rowSpanArr = [];\r\n                const nextRowIndex = util.getArrayIndex(rows, currentRow) + newRowSpan;\r\n\r\n                for (let i = 0, cells, colSpan; i < nextRowIndex; i++) {\r\n                    cells = rows[i].cells;\r\n                    colSpan = 0;\r\n                    for (let c = 0, cLen = cells.length, cell, cs, logcalIndex; c < cLen; c++) {\r\n                        logcalIndex = c + colSpan;\r\n                        if (logcalIndex >= index) break;\r\n\r\n                        cell = cells[c];\r\n                        cs = cell.rowSpan - 1;\r\n                        if (cs > 0 && cs + i >= nextRowIndex && logcalIndex < index) {\r\n                            rowSpanArr.push({\r\n                                index: logcalIndex,\r\n                                cs: cell.colSpan\r\n                            });\r\n                        }\r\n                        colSpan += cell.colSpan - 1;\r\n                    }\r\n                }\r\n\r\n                const nextRow = rows[nextRowIndex];\r\n                const nextCells = nextRow.cells;\r\n                let rs = rowSpanArr.shift();\r\n\r\n                for (let c = 0, cLen = nextCells.length, colSpan = 0, cell, cs, logcalIndex, insertIndex; c < cLen; c++) {\r\n                    logcalIndex = c + colSpan;\r\n                    cell = nextCells[c];\r\n                    cs = cell.colSpan - 1;\r\n                    insertIndex = logcalIndex + cs + 1;\r\n\r\n                    if (rs && insertIndex >= rs.index) {\r\n                        colSpan += rs.cs;\r\n                        insertIndex += rs.cs;\r\n                        rs = rowSpanArr.shift();\r\n                    }\r\n                    \r\n                    if (insertIndex >= index || c === cLen - 1) {\r\n                        nextRow.insertBefore(newCell, cell.nextElementSibling);\r\n                        break;\r\n                    }\r\n\r\n                    colSpan += cs;\r\n                }\r\n\r\n                currentCell.rowSpan = newRowSpan;\r\n            } else { // rowspan - 1\r\n                newCell.rowSpan = currentCell.rowSpan;\r\n                const newRow = util.createElement('TR');\r\n                newRow.appendChild(newCell);\r\n\r\n                for (let i = 0, cells; i < rowIndex; i++) {\r\n                    cells = rows[i].cells;\r\n                    if (cells.length === 0) return;\r\n\r\n                    for (let c = 0, cLen = cells.length; c < cLen; c++) {\r\n                        if (i + cells[c].rowSpan - 1 >= rowIndex) {\r\n                            cells[c].rowSpan += 1;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                const physicalIndex = contextTable._physical_cellIndex;\r\n                const cells = currentRow.cells;\r\n\r\n                for (let c = 0, cLen = cells.length; c < cLen; c++) {\r\n                    if (c === physicalIndex) continue;       \r\n                    cells[c].rowSpan += 1;                    \r\n                }\r\n\r\n                currentRow.parentNode.insertBefore(newRow, currentRow.nextElementSibling);\r\n            }\r\n        }\r\n\r\n        this.focusEdge(currentCell);\r\n        this.plugins.table.setPositionControllerDiv.call(this, currentCell, true);\r\n    },\r\n\r\n    mergeCells: function () {\r\n        const tablePlugin = this.plugins.table;\r\n        const contextTable = this.context.table;\r\n        const util = this.util;\r\n\r\n        const ref = tablePlugin._ref;\r\n        const selectedCells = tablePlugin._selectedCells;\r\n        const mergeCell = selectedCells[0];\r\n        \r\n        let emptyRowFirst = null;\r\n        let emptyRowLast = null;\r\n        let cs = (ref.ce - ref.cs) + 1;\r\n        let rs = (ref.re - ref.rs) + 1;\r\n        let mergeHTML = '';\r\n        let row = null;\r\n\r\n        for (let i = 1, len = selectedCells.length, cell, ch; i < len; i++) {\r\n            cell = selectedCells[i];\r\n            if (row !== cell.parentNode) row = cell.parentNode;\r\n\r\n            ch = cell.children;\r\n            for (let c = 0, cLen = ch.length; c < cLen; c++) {\r\n                if (util.isFormatElement(ch[c]) && util.onlyZeroWidthSpace(ch[c].textContent)) {\r\n                    util.removeItem(ch[c]);\r\n                }  \r\n            }\r\n\r\n            mergeHTML += cell.innerHTML;\r\n            util.removeItem(cell);\r\n\r\n            if (row.cells.length === 0) {\r\n                if (!emptyRowFirst) emptyRowFirst = row;\r\n                else emptyRowLast = row;\r\n                rs -= 1;\r\n            }\r\n        }\r\n\r\n        if (emptyRowFirst) {\r\n            const rows = contextTable._trElements;\r\n            const rowIndexFirst = util.getArrayIndex(rows, emptyRowFirst);\r\n            const rowIndexLast = util.getArrayIndex(rows, emptyRowLast || emptyRowFirst);\r\n            const removeRows = [];\r\n    \r\n            for (let i = 0, cells; i <= rowIndexLast; i++) {\r\n                cells = rows[i].cells;\r\n                if (cells.length === 0) {\r\n                    removeRows.push(rows[i]);\r\n                    continue;\r\n                }\r\n    \r\n                for (let c = 0, cLen = cells.length, cell, rs; c < cLen; c++) {\r\n                    cell = cells[c];\r\n                    rs = cell.rowSpan - 1;\r\n                    if (rs > 0 && i + rs >= rowIndexFirst) {\r\n                        cell.rowSpan -= util.getOverlapRangeAtIndex(rowIndexFirst, rowIndexLast, i, i + rs);\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let i = 0, len = removeRows.length; i < len; i++) {\r\n                util.removeItem(removeRows[i]);\r\n            }\r\n        }\r\n\r\n        mergeCell.innerHTML += mergeHTML;\r\n        mergeCell.colSpan = cs;\r\n        mergeCell.rowSpan = rs;\r\n\r\n        this.controllersOff();\r\n        tablePlugin.setActiveButton.call(this, true, false);\r\n        tablePlugin.call_controller_tableEdit.call(this, mergeCell);\r\n\r\n        util.addClass(mergeCell, 'se-table-selected-cell');\r\n        this.focusEdge(mergeCell);\r\n    },\r\n\r\n    toggleHeader: function () {\r\n        const util = this.util;\r\n        const headerButton = this.context.table.headerButton;\r\n        const active = util.hasClass(headerButton, 'active');\r\n        const table = this.context.table._element;\r\n\r\n        if (!active) {\r\n            const header = util.createElement('THEAD');\r\n            header.innerHTML = '<tr>' + this.plugins.table.createCells.call(this, 'th', this.context.table._logical_cellCnt, false) + '</tr>';\r\n            table.insertBefore(header, table.firstElementChild);\r\n        } else {\r\n            util.removeItem(table.querySelector('thead'));\r\n        }\r\n\r\n        util.toggleClass(headerButton, 'active');\r\n\r\n        if (/TH/i.test(this.context.table._tdElement.nodeName)) {\r\n            this.controllersOff();\r\n        } else {\r\n            this.plugins.table.setPositionControllerDiv.call(this, this.context.table._tdElement, false);\r\n        }\r\n    },\r\n\r\n    setTableStyle: function (styles) {\r\n        const contextTable = this.context.table;\r\n        const tableElement = contextTable._element;\r\n        let icon, span, sizeIcon, text;\r\n\r\n        if (styles.indexOf('width') > -1) {\r\n            icon =  contextTable.resizeButton.firstElementChild;\r\n            span = contextTable.resizeText;\r\n\r\n            if (!contextTable._maxWidth) {\r\n                sizeIcon = contextTable.icons.expansion;\r\n                text = contextTable.maxText;\r\n                contextTable.columnFixedButton.style.display = 'none';\r\n                this.util.removeClass(tableElement, 'se-table-size-100');\r\n                this.util.addClass(tableElement, 'se-table-size-auto');\r\n            } else {\r\n                sizeIcon = contextTable.icons.reduction;\r\n                text = contextTable.minText;\r\n                contextTable.columnFixedButton.style.display = 'block';\r\n                this.util.removeClass(tableElement, 'se-table-size-auto');\r\n                this.util.addClass(tableElement, 'se-table-size-100');\r\n            }\r\n            \r\n            this.util.changeElement(icon, sizeIcon);\r\n            this.util.changeTxt(span, text);\r\n        }\r\n\r\n        if (styles.indexOf('column') > -1) {\r\n            if (!contextTable._fixedColumn) {\r\n                this.util.removeClass(tableElement, 'se-table-layout-fixed');\r\n                this.util.addClass(tableElement, 'se-table-layout-auto');\r\n                this.util.removeClass(contextTable.columnFixedButton, 'active');\r\n            } else {\r\n                this.util.removeClass(tableElement, 'se-table-layout-auto');\r\n                this.util.addClass(tableElement, 'se-table-layout-fixed');\r\n                this.util.addClass(contextTable.columnFixedButton, 'active');\r\n            }\r\n            \r\n        }\r\n    },\r\n\r\n    setActiveButton: function (fixedCell, selectedCell) {\r\n        const contextTable = this.context.table;\r\n\r\n        if (/^TH$/i.test(fixedCell.nodeName)) {\r\n            contextTable.insertRowAboveButton.setAttribute('disabled', true);\r\n            contextTable.insertRowBelowButton.setAttribute('disabled', true);\r\n        } else {\r\n            contextTable.insertRowAboveButton.removeAttribute('disabled');\r\n            contextTable.insertRowBelowButton.removeAttribute('disabled');\r\n        }\r\n\r\n        if (!selectedCell || fixedCell === selectedCell) {\r\n            contextTable.splitButton.removeAttribute('disabled');\r\n            contextTable.mergeButton.setAttribute('disabled', true);\r\n        } else {\r\n            contextTable.splitButton.setAttribute('disabled', true);\r\n            contextTable.mergeButton.removeAttribute('disabled');\r\n        }\r\n    },\r\n\r\n    // multi selecte\r\n    _bindOnSelect: null,\r\n    _bindOffSelect: null,\r\n    _bindOffShift: null,\r\n    _selectedCells: null,\r\n    _shift: false,\r\n    _fixedCell: null,\r\n    _fixedCellName: null,\r\n    _selectedCell: null,\r\n    _selectedTable: null,\r\n    _ref: null,\r\n    _toggleEditor: function (enabled) {\r\n        this.context.element.wysiwyg.setAttribute('contenteditable', enabled);\r\n        if (enabled) this.util.removeClass(this.context.element.wysiwyg, 'se-disabled');\r\n        else this.util.addClass(this.context.element.wysiwyg, 'se-disabled');\r\n    },\r\n\r\n    _offCellMultiSelect: function (e) {\r\n        e.stopPropagation();\r\n        const tablePlugin = this.plugins.table;\r\n\r\n        if (!tablePlugin._shift) {\r\n            tablePlugin._removeEvents.call(this);\r\n            tablePlugin._toggleEditor.call(this, true);\r\n        } else if (tablePlugin._initBind) {\r\n            this._wd.removeEventListener('touchmove', tablePlugin._initBind);\r\n            tablePlugin._initBind = null;\r\n        }\r\n\r\n        if (!tablePlugin._fixedCell || !tablePlugin._selectedTable) return;\r\n        \r\n        tablePlugin.setActiveButton.call(this, tablePlugin._fixedCell, tablePlugin._selectedCell);\r\n        tablePlugin.call_controller_tableEdit.call(this, tablePlugin._selectedCell || tablePlugin._fixedCell);\r\n\r\n        tablePlugin._selectedCells = tablePlugin._selectedTable.querySelectorAll('.se-table-selected-cell');\r\n        if (tablePlugin._selectedCell && tablePlugin._fixedCell) this.focusEdge(tablePlugin._selectedCell);\r\n\r\n        if (!tablePlugin._shift) {\r\n            tablePlugin._fixedCell = null;\r\n            tablePlugin._selectedCell = null;\r\n            tablePlugin._fixedCellName = null;\r\n        }\r\n    },\r\n\r\n    _onCellMultiSelect: function (e) {\r\n        this._antiBlur = true;\r\n        const tablePlugin = this.plugins.table;\r\n        const target = this.util.getParentElement(e.target, this.util.isCell);\r\n\r\n        if (tablePlugin._shift) {\r\n            if (target === tablePlugin._fixedCell) tablePlugin._toggleEditor.call(this, true);\r\n            else tablePlugin._toggleEditor.call(this, false);\r\n        } else if (!tablePlugin._ref) {\r\n            if (target === tablePlugin._fixedCell) return;\r\n            else tablePlugin._toggleEditor.call(this, false);\r\n        }\r\n\r\n        if (!target || target === tablePlugin._selectedCell || tablePlugin._fixedCellName !== target.nodeName || \r\n            tablePlugin._selectedTable !== this.util.getParentElement(target, 'TABLE')) {\r\n            return;\r\n        }\r\n\r\n        tablePlugin._selectedCell = target;\r\n        tablePlugin._setMultiCells.call(this, tablePlugin._fixedCell, target);\r\n    },\r\n\r\n    _setMultiCells: function (startCell, endCell) {\r\n        const tablePlugin = this.plugins.table;\r\n        const rows = tablePlugin._selectedTable.rows;\r\n        const util = this.util;\r\n\r\n        const selectedCells = tablePlugin._selectedTable.querySelectorAll('.se-table-selected-cell');\r\n        for (let i = 0, len = selectedCells.length; i < len; i++) {\r\n            util.removeClass(selectedCells[i], 'se-table-selected-cell');\r\n        }\r\n\r\n        if (startCell === endCell) {\r\n            util.addClass(startCell, 'se-table-selected-cell');\r\n            if (!tablePlugin._shift) return;\r\n        }\r\n\r\n        let findSelectedCell = true;\r\n        let spanIndex = [];\r\n        let rowSpanArr = [];\r\n        const ref = tablePlugin._ref = {_i: 0, cs: null, ce: null, rs: null, re: null};\r\n\r\n        for (let i = 0, len = rows.length, cells, colSpan; i < len; i++) {\r\n            cells = rows[i].cells;\r\n            colSpan = 0;\r\n\r\n            for (let c = 0, cLen = cells.length, cell, logcalIndex, cs, rs; c < cLen; c++) {\r\n                cell = cells[c];\r\n                cs = cell.colSpan - 1;\r\n                rs = cell.rowSpan - 1;\r\n                logcalIndex = c + colSpan;\r\n\r\n                if (spanIndex.length > 0) {\r\n                    for (let r = 0, arr; r < spanIndex.length; r++) {\r\n                        arr = spanIndex[r];\r\n                        if (arr.row > i) continue;\r\n                        if (logcalIndex >= arr.index) {\r\n                            colSpan += arr.cs;\r\n                            logcalIndex += arr.cs;\r\n                            arr.rs -= 1;\r\n                            arr.row = i + 1;\r\n                            if (arr.rs < 1) {\r\n                                spanIndex.splice(r, 1);\r\n                                r--;\r\n                            }\r\n                        } else if (c === cLen - 1) {\r\n                            arr.rs -= 1;\r\n                            arr.row = i + 1;\r\n                            if (arr.rs < 1) {\r\n                                spanIndex.splice(r, 1);\r\n                                r--;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (findSelectedCell) {\r\n                    if (cell === startCell || cell === endCell) {\r\n                        ref.cs = ref.cs !== null && ref.cs < logcalIndex ? ref.cs : logcalIndex;\r\n                        ref.ce = ref.ce !== null && ref.ce > logcalIndex + cs ? ref.ce : logcalIndex + cs;\r\n                        ref.rs = ref.rs !== null && ref.rs < i ? ref.rs : i;\r\n                        ref.re = ref.re !== null && ref.re > i + rs ? ref.re : i + rs;\r\n                        ref._i += 1;\r\n                    }\r\n                    \r\n                    if (ref._i === 2) {\r\n                        findSelectedCell = false;\r\n                        spanIndex = [];\r\n                        rowSpanArr = [];\r\n                        i = -1;\r\n                        break;\r\n                    }\r\n                } else if (util.getOverlapRangeAtIndex(ref.cs, ref.ce, logcalIndex, logcalIndex + cs) && util.getOverlapRangeAtIndex(ref.rs, ref.re, i, i + rs)) {\r\n                    const newCs = ref.cs < logcalIndex ? ref.cs : logcalIndex;\r\n                    const newCe = ref.ce > logcalIndex + cs ? ref.ce : logcalIndex + cs;\r\n                    const newRs = ref.rs < i ? ref.rs : i;\r\n                    const newRe = ref.re > i + rs ? ref.re : i + rs;\r\n\r\n                    if (ref.cs !== newCs || ref.ce !== newCe || ref.rs !== newRs || ref.re !== newRe) {\r\n                        ref.cs = newCs;\r\n                        ref.ce = newCe;\r\n                        ref.rs = newRs;\r\n                        ref.re = newRe;\r\n                        i = -1;\r\n\r\n                        spanIndex = [];\r\n                        rowSpanArr = [];\r\n                        break;\r\n                    }\r\n\r\n                    util.addClass(cell, 'se-table-selected-cell');\r\n                }\r\n\r\n                if (rs > 0) {\r\n                    rowSpanArr.push({\r\n                        index: logcalIndex,\r\n                        cs: cs + 1,\r\n                        rs: rs,\r\n                        row: -1\r\n                    });\r\n                }\r\n\r\n                colSpan += cell.colSpan - 1;\r\n            }\r\n\r\n            spanIndex = spanIndex.concat(rowSpanArr).sort(function (a, b) {return a.index - b.index;});\r\n            rowSpanArr = [];\r\n        }\r\n    },\r\n\r\n    _removeEvents: function () {\r\n        const tablePlugin = this.plugins.table;\r\n\r\n        if (tablePlugin._initBind) {\r\n            this._wd.removeEventListener('touchmove', tablePlugin._initBind);\r\n            tablePlugin._initBind = null;\r\n        }\r\n\r\n        if (tablePlugin._bindOnSelect) {\r\n            this._wd.removeEventListener('mousedown', tablePlugin._bindOnSelect);\r\n            this._wd.removeEventListener('mousemove', tablePlugin._bindOnSelect);\r\n            tablePlugin._bindOnSelect = null;\r\n        }\r\n\r\n        if (tablePlugin._bindOffSelect) {\r\n            this._wd.removeEventListener('mouseup', tablePlugin._bindOffSelect);\r\n            tablePlugin._bindOffSelect = null;\r\n        }\r\n\r\n        if (tablePlugin._bindOffShift) {\r\n            this._wd.removeEventListener('keyup', tablePlugin._bindOffShift);\r\n            tablePlugin._bindOffShift = null;\r\n        }\r\n    },\r\n\r\n    _initBind: null,\r\n    onTableCellMultiSelect: function (tdElement, shift) {\r\n        const tablePlugin = this.plugins.table;\r\n\r\n        tablePlugin._removeEvents.call(this);\r\n        this.controllersOff();\r\n\r\n        tablePlugin._shift = shift;\r\n        tablePlugin._fixedCell = tdElement;\r\n        tablePlugin._fixedCellName = tdElement.nodeName;\r\n        tablePlugin._selectedTable = this.util.getParentElement(tdElement, 'TABLE');\r\n\r\n        const selectedCells = tablePlugin._selectedTable.querySelectorAll('.se-table-selected-cell');\r\n        for (let i = 0, len = selectedCells.length; i < len; i++) {\r\n            this.util.removeClass(selectedCells[i], 'se-table-selected-cell');\r\n        }\r\n\r\n        this.util.addClass(tdElement, 'se-table-selected-cell');\r\n        \r\n        tablePlugin._bindOnSelect = tablePlugin._onCellMultiSelect.bind(this);\r\n        tablePlugin._bindOffSelect = tablePlugin._offCellMultiSelect.bind(this);\r\n\r\n        if (!shift) {\r\n            this._wd.addEventListener('mousemove', tablePlugin._bindOnSelect, false);\r\n        } else {\r\n            tablePlugin._bindOffShift = function () {\r\n                this.controllersOn(this.context.table.resizeDiv, this.context.table.tableController, this.plugins.table.init.bind(this), tdElement, 'table');\r\n                if (!tablePlugin._ref) this.controllersOff();\r\n            }.bind(this);\r\n\r\n            this._wd.addEventListener('keyup', tablePlugin._bindOffShift, false);\r\n            this._wd.addEventListener('mousedown', tablePlugin._bindOnSelect, false);\r\n        }\r\n\r\n        this._wd.addEventListener('mouseup', tablePlugin._bindOffSelect, false);\r\n        tablePlugin._initBind = tablePlugin.init.bind(this);\r\n        this._wd.addEventListener('touchmove', tablePlugin._initBind, false);\r\n    },\r\n\r\n    onClick_tableController: function (e) {\r\n        e.stopPropagation();\r\n        const target = e.target.getAttribute('data-command') ? e.target : e.target.parentNode;\r\n\r\n        if (target.getAttribute('disabled')) return;\r\n\r\n        const command = target.getAttribute('data-command');\r\n        const value = target.getAttribute('data-value');\r\n        const option = target.getAttribute('data-option');\r\n        const tablePlugin = this.plugins.table;\r\n        \r\n        if (typeof tablePlugin._closeSplitMenu === 'function') {\r\n            tablePlugin._closeSplitMenu();\r\n            if (command === 'onsplit') return;\r\n        }\r\n\r\n        if (!command) return;\r\n\r\n        e.preventDefault();\r\n        const contextTable = this.context.table;\r\n\r\n        switch (command) {\r\n            case 'insert':\r\n            case 'delete':\r\n                tablePlugin.editTable.call(this, value, option);\r\n                break;\r\n            case 'header':\r\n                tablePlugin.toggleHeader.call(this);\r\n                break;\r\n            case 'onsplit':\r\n                tablePlugin.openSplitMenu.call(this);\r\n                break;\r\n            case 'split':\r\n                tablePlugin.splitCells.call(this, value);\r\n                break;\r\n            case 'merge':\r\n                tablePlugin.mergeCells.call(this);\r\n                break;\r\n            case 'resize':\r\n                contextTable._maxWidth = !contextTable._maxWidth;\r\n                tablePlugin.setTableStyle.call(this, 'width');\r\n                tablePlugin.setPositionControllerTop.call(this, contextTable._element);\r\n                tablePlugin.setPositionControllerDiv.call(this, contextTable._tdElement, tablePlugin._shift);\r\n                break;\r\n            case 'layout':\r\n                contextTable._fixedColumn = !contextTable._fixedColumn;\r\n                tablePlugin.setTableStyle.call(this, 'column');\r\n                tablePlugin.setPositionControllerTop.call(this, contextTable._element);\r\n                tablePlugin.setPositionControllerDiv.call(this, contextTable._tdElement, tablePlugin._shift);\r\n                break;\r\n            case 'remove':\r\n                const emptyDiv = contextTable._element.parentNode;\r\n                this.util.removeItem(contextTable._element);\r\n                this.controllersOff();\r\n\r\n                if (emptyDiv !== this.context.element.wysiwyg) this.util.removeItemAllParents(emptyDiv, function (current) { return current.childNodes.length === 0; }, null);\r\n                this.focus();\r\n        }\r\n\r\n        // history stack\r\n        this.history.push(false);\r\n    }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}