{"ast":null,"code":"/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2018 JiHong Lee.\r\n * MIT license.\r\n */\n'use strict';\n\nexport default {\n  name: 'colorPicker',\n\n  /**\r\n   * @description Constructor\r\n   * @param {Object} core Core object \r\n   */\n  add: function add(core) {\n    var context = core.context;\n    context.colorPicker = {\n      colorListHTML: '',\n      _colorInput: '',\n      _defaultColor: '#000',\n      _styleProperty: 'color',\n      _currentColor: '',\n      _colorList: []\n    };\n    /** set submenu */\n\n    context.colorPicker.colorListHTML = this.createColorList(core, this._makeColorList);\n  },\n\n  /**\r\n   * @description Create color list\r\n   * @param {Object} core Core object \r\n   * @param {Function} makeColor this._makeColorList\r\n   * @returns {String} HTML string\r\n   */\n  createColorList: function createColorList(core, makeColor) {\n    var option = core.options;\n    var lang = core.lang;\n    var colorList = !option.colorList || option.colorList.length === 0 ? ['#ff0000', '#ff5e00', '#ffe400', '#abf200', '#00d8ff', '#0055ff', '#6600ff', '#ff00dd', '#000000', '#ffd8d8', '#fae0d4', '#faf4c0', '#e4f7ba', '#d4f4fa', '#d9e5ff', '#e8d9ff', '#ffd9fa', '#f1f1f1', '#ffa7a7', '#ffc19e', '#faed7d', '#cef279', '#b2ebf4', '#b2ccff', '#d1b2ff', '#ffb2f5', '#bdbdbd', '#f15f5f', '#f29661', '#e5d85c', '#bce55c', '#5cd1e5', '#6699ff', '#a366ff', '#f261df', '#8c8c8c', '#980000', '#993800', '#998a00', '#6b9900', '#008299', '#003399', '#3d0099', '#990085', '#353535', '#670000', '#662500', '#665c00', '#476600', '#005766', '#002266', '#290066', '#660058', '#222222'] : option.colorList;\n    var colorArr = [];\n    var list = '<div class=\"se-list-inner\">';\n\n    for (var i = 0, len = colorList.length, color; i < len; i++) {\n      color = colorList[i];\n      if (!color) continue;\n\n      if (typeof color === 'string') {\n        colorArr.push(color);\n        if (i < len - 1) continue;\n      }\n\n      if (colorArr.length > 0) {\n        list += '<div class=\"se-selector-color\">' + makeColor(colorArr) + '</div>';\n        colorArr = [];\n      }\n\n      if (typeof color === 'object') {\n        list += '<div class=\"se-selector-color\">' + makeColor(color) + '</div>';\n      }\n    }\n\n    list += '' + '<form class=\"se-form-group\">' + '<input type=\"text\" maxlength=\"9\" class=\"_se_color_picker_input se-color-input\"/>' + '<button type=\"submit\" class=\"se-btn-primary _se_color_picker_submit\" title=\"' + lang.dialogBox.submitButton + '\" aria-label=\"' + lang.dialogBox.submitButton + '\">' + core.icons.checked + '</button>' + '<button type=\"button\" class=\"se-btn _se_color_picker_remove\" title=\"' + lang.toolbar.removeFormat + '\" aria-label=\"' + lang.toolbar.removeFormat + '\">' + core.icons.erase + '</button>' + '</form>' + '</div>';\n    return list;\n  },\n\n  /**\r\n   * @description Internal function used by this.createColorList\r\n   * @param {Array} colorList Color list\r\n   * @private\r\n   */\n  _makeColorList: function _makeColorList(colorList) {\n    var list = '';\n    list += '<ul class=\"se-color-pallet\">';\n\n    for (var i = 0, len = colorList.length, color; i < len; i++) {\n      color = colorList[i];\n\n      if (typeof color === 'string') {\n        list += '<li>' + '<button type=\"button\" data-value=\"' + color + '\" title=\"' + color + '\" aria-label=\"' + color + '\" style=\"background-color:' + color + ';\"></button>' + '</li>';\n      }\n    }\n\n    list += '</ul>';\n    return list;\n  },\n\n  /**\r\n   * @description Displays or resets the currently selected color at color list.\r\n   * @param {Node} node Current Selected node\r\n   * @param {String|null} color Color value\r\n   */\n  init: function init(node, color) {\n    var colorPicker = this.plugins.colorPicker;\n    var fillColor = color ? color : colorPicker.getColorInNode.call(this, node) || this.context.colorPicker._defaultColor;\n    fillColor = colorPicker.isHexColor(fillColor) ? fillColor : colorPicker.rgb2hex(fillColor) || fillColor;\n    var colorList = this.context.colorPicker._colorList;\n\n    if (colorList) {\n      for (var i = 0, len = colorList.length; i < len; i++) {\n        if (fillColor.toLowerCase() === colorList[i].getAttribute('data-value').toLowerCase()) {\n          this.util.addClass(colorList[i], 'active');\n        } else {\n          this.util.removeClass(colorList[i], 'active');\n        }\n      }\n    }\n\n    colorPicker.setInputText.call(this, colorPicker.colorName2hex.call(this, fillColor));\n  },\n\n  /**\r\n   * @description Store color values\r\n   * @param {String} hexColorStr Hax color value\r\n   */\n  setCurrentColor: function setCurrentColor(hexColorStr) {\n    this.context.colorPicker._currentColor = hexColorStr;\n    this.context.colorPicker._colorInput.style.borderColor = hexColorStr;\n  },\n\n  /**\r\n   * @description Set color at input element\r\n   * @param {String} hexColorStr Hax color value\r\n   */\n  setInputText: function setInputText(hexColorStr) {\n    hexColorStr = /^#/.test(hexColorStr) ? hexColorStr : '#' + hexColorStr;\n    this.context.colorPicker._colorInput.value = hexColorStr;\n    this.plugins.colorPicker.setCurrentColor.call(this, hexColorStr);\n  },\n\n  /**\r\n   * @description Gets color value at color property of node\r\n   * @param {Node} node Selected node \r\n   * @returns {String}\r\n   */\n  getColorInNode: function getColorInNode(node) {\n    var findColor = '';\n    var styleProperty = this.context.colorPicker._styleProperty;\n\n    while (node && !this.util.isWysiwygDiv(node) && findColor.length === 0) {\n      if (node.nodeType === 1 && node.style[styleProperty]) findColor = node.style[styleProperty];\n      node = node.parentNode;\n    }\n\n    return findColor;\n  },\n\n  /**\r\n   * @description Function to check hex format color\r\n   * @param {String} str Color value\r\n   */\n  isHexColor: function isHexColor(str) {\n    return /^#[0-9a-f]{3}(?:[0-9a-f]{3})?$/i.test(str);\n  },\n\n  /**\r\n   * @description Function to convert hex format to a rgb color\r\n   * @param {String} rgb RGB color format\r\n   * @returns {String}\r\n   */\n  rgb2hex: function rgb2hex(rgb) {\n    var rgbMatch = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n    return rgbMatch && rgbMatch.length === 4 ? \"#\" + (\"0\" + parseInt(rgbMatch[1], 10).toString(16)).slice(-2) + (\"0\" + parseInt(rgbMatch[2], 10).toString(16)).slice(-2) + (\"0\" + parseInt(rgbMatch[3], 10).toString(16)).slice(-2) : '';\n  },\n\n  /**\r\n   * @description Converts color values of other formats to hex color values and returns.\r\n   * @param {String} colorName Color value\r\n   * @returns {String}\r\n   */\n  colorName2hex: function colorName2hex(colorName) {\n    if (/^#/.test(colorName)) return colorName;\n    var temp = this.util.createElement('div');\n    temp.style.display = 'none';\n    temp.style.color = colorName;\n\n    var colors = this._w.getComputedStyle(this._d.body.appendChild(temp)).color.match(/\\d+/g).map(function (a) {\n      return parseInt(a, 10);\n    });\n\n    this.util.removeItem(temp);\n    return colors.length >= 3 ? '#' + ((1 << 24) + (colors[0] << 16) + (colors[1] << 8) + colors[2]).toString(16).substr(1) : false;\n  }\n};","map":{"version":3,"names":["name","add","core","context","colorPicker","colorListHTML","_colorInput","_defaultColor","_styleProperty","_currentColor","_colorList","createColorList","_makeColorList","makeColor","option","options","lang","colorList","length","colorArr","list","i","len","color","push","dialogBox","submitButton","icons","checked","toolbar","removeFormat","erase","init","node","plugins","fillColor","getColorInNode","call","isHexColor","rgb2hex","toLowerCase","getAttribute","util","addClass","removeClass","setInputText","colorName2hex","setCurrentColor","hexColorStr","style","borderColor","test","value","findColor","styleProperty","isWysiwygDiv","nodeType","parentNode","str","rgb","rgbMatch","match","parseInt","toString","slice","colorName","temp","createElement","display","colors","_w","getComputedStyle","_d","body","appendChild","map","a","removeItem","substr"],"sources":["/Users/jirayuyungmeesuk/Desktop/code/client/node_modules/suneditor/src/plugins/modules/_colorPicker.js"],"sourcesContent":["/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2018 JiHong Lee.\r\n * MIT license.\r\n */\r\n'use strict';\r\n\r\nexport default {\r\n    name: 'colorPicker',\r\n    /**\r\n     * @description Constructor\r\n     * @param {Object} core Core object \r\n     */\r\n    add: function (core) {\r\n        const context = core.context;\r\n        context.colorPicker = {\r\n            colorListHTML: '',\r\n            _colorInput: '',\r\n            _defaultColor: '#000',\r\n            _styleProperty: 'color',\r\n            _currentColor: '',\r\n            _colorList: []\r\n        };\r\n\r\n        /** set submenu */\r\n        context.colorPicker.colorListHTML = this.createColorList(core, this._makeColorList);\r\n    },\r\n\r\n    /**\r\n     * @description Create color list\r\n     * @param {Object} core Core object \r\n     * @param {Function} makeColor this._makeColorList\r\n     * @returns {String} HTML string\r\n     */\r\n    createColorList: function (core, makeColor) {\r\n        const option = core.options;\r\n        const lang = core.lang;\r\n        const colorList = !option.colorList || option.colorList.length === 0 ?\r\n            [\r\n                '#ff0000', '#ff5e00', '#ffe400', '#abf200', '#00d8ff', '#0055ff', '#6600ff', '#ff00dd', '#000000',\r\n                '#ffd8d8', '#fae0d4', '#faf4c0', '#e4f7ba', '#d4f4fa', '#d9e5ff', '#e8d9ff', '#ffd9fa', '#f1f1f1',\r\n                '#ffa7a7', '#ffc19e', '#faed7d', '#cef279', '#b2ebf4', '#b2ccff', '#d1b2ff', '#ffb2f5', '#bdbdbd',\r\n                '#f15f5f', '#f29661', '#e5d85c', '#bce55c', '#5cd1e5', '#6699ff', '#a366ff', '#f261df', '#8c8c8c',\r\n                '#980000', '#993800', '#998a00', '#6b9900', '#008299', '#003399', '#3d0099', '#990085', '#353535',\r\n                '#670000', '#662500', '#665c00', '#476600', '#005766', '#002266', '#290066', '#660058', '#222222'\r\n            ] : option.colorList;\r\n\r\n        let colorArr = [];\r\n        let list = '<div class=\"se-list-inner\">';\r\n            for (let i = 0, len = colorList.length, color; i < len; i++) {\r\n                color = colorList[i];\r\n                if (!color) continue;\r\n                \r\n                if (typeof color === 'string') {\r\n                    colorArr.push(color);\r\n                    if (i < len - 1) continue;\r\n                }\r\n                if (colorArr.length > 0) {\r\n                    list += '<div class=\"se-selector-color\">' + makeColor(colorArr) + '</div>';\r\n                    colorArr = [];\r\n                }\r\n                if (typeof color === 'object') {\r\n                    list += '<div class=\"se-selector-color\">' + makeColor(color) + '</div>';\r\n                }\r\n            }\r\n            list += '' +\r\n            '<form class=\"se-form-group\">' +\r\n                '<input type=\"text\" maxlength=\"9\" class=\"_se_color_picker_input se-color-input\"/>' +\r\n                '<button type=\"submit\" class=\"se-btn-primary _se_color_picker_submit\" title=\"' + lang.dialogBox.submitButton + '\" aria-label=\"' + lang.dialogBox.submitButton + '\">' +\r\n                    core.icons.checked +\r\n                '</button>' +\r\n                '<button type=\"button\" class=\"se-btn _se_color_picker_remove\" title=\"' + lang.toolbar.removeFormat + '\" aria-label=\"' + lang.toolbar.removeFormat + '\">' +\r\n                    core.icons.erase +\r\n                '</button>' +\r\n            '</form>' +\r\n            '</div>';\r\n\r\n        return list;\r\n    },\r\n\r\n    /**\r\n     * @description Internal function used by this.createColorList\r\n     * @param {Array} colorList Color list\r\n     * @private\r\n     */\r\n    _makeColorList: function (colorList) {\r\n        let list = '';\r\n\r\n        list += '<ul class=\"se-color-pallet\">';\r\n        for (let i = 0, len = colorList.length, color; i < len; i++) {\r\n            color = colorList[i];\r\n            if (typeof color === 'string') {\r\n                list += '<li>' +\r\n                            '<button type=\"button\" data-value=\"' + color + '\" title=\"' + color + '\" aria-label=\"' + color + '\" style=\"background-color:' + color + ';\"></button>' +\r\n                        '</li>';\r\n            }\r\n        }\r\n        list += '</ul>';\r\n\r\n        return list;\r\n    },\r\n    \r\n    /**\r\n     * @description Displays or resets the currently selected color at color list.\r\n     * @param {Node} node Current Selected node\r\n     * @param {String|null} color Color value\r\n     */\r\n    init: function (node, color) {\r\n        const colorPicker = this.plugins.colorPicker;\r\n        let fillColor = color ? color : colorPicker.getColorInNode.call(this, node) || this.context.colorPicker._defaultColor;\r\n        fillColor = colorPicker.isHexColor(fillColor) ? fillColor : colorPicker.rgb2hex(fillColor) || fillColor;\r\n\r\n        const colorList = this.context.colorPicker._colorList;\r\n        if (colorList) {\r\n            for (let i = 0, len = colorList.length; i < len; i++) {\r\n                if (fillColor.toLowerCase() === colorList[i].getAttribute('data-value').toLowerCase()) {\r\n                    this.util.addClass(colorList[i], 'active');\r\n                } else {\r\n                    this.util.removeClass(colorList[i], 'active');\r\n                }\r\n            }\r\n        }\r\n\r\n        colorPicker.setInputText.call(this, colorPicker.colorName2hex.call(this, fillColor));\r\n    },\r\n\r\n    /**\r\n     * @description Store color values\r\n     * @param {String} hexColorStr Hax color value\r\n     */\r\n    setCurrentColor: function (hexColorStr) {\r\n        this.context.colorPicker._currentColor = hexColorStr;\r\n        this.context.colorPicker._colorInput.style.borderColor = hexColorStr;\r\n    },\r\n\r\n    /**\r\n     * @description Set color at input element\r\n     * @param {String} hexColorStr Hax color value\r\n     */\r\n    setInputText: function (hexColorStr) {\r\n        hexColorStr = /^#/.test(hexColorStr) ? hexColorStr : '#' + hexColorStr;\r\n        this.context.colorPicker._colorInput.value = hexColorStr;\r\n        this.plugins.colorPicker.setCurrentColor.call(this, hexColorStr);\r\n    },\r\n\r\n    /**\r\n     * @description Gets color value at color property of node\r\n     * @param {Node} node Selected node \r\n     * @returns {String}\r\n     */\r\n    getColorInNode: function (node) {\r\n        let findColor = '';\r\n        const styleProperty = this.context.colorPicker._styleProperty;\r\n\r\n        while (node && !this.util.isWysiwygDiv(node) && findColor.length === 0) {\r\n            if (node.nodeType === 1 && node.style[styleProperty]) findColor = node.style[styleProperty];\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return findColor;\r\n    },\r\n\r\n    /**\r\n     * @description Function to check hex format color\r\n     * @param {String} str Color value\r\n     */\r\n    isHexColor: function (str) {\r\n        return /^#[0-9a-f]{3}(?:[0-9a-f]{3})?$/i.test(str);\r\n    },\r\n\r\n    /**\r\n     * @description Function to convert hex format to a rgb color\r\n     * @param {String} rgb RGB color format\r\n     * @returns {String}\r\n     */\r\n    rgb2hex: function (rgb) {\r\n        const rgbMatch = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\r\n\r\n        return (rgbMatch && rgbMatch.length === 4) ? \"#\" +\r\n            (\"0\" + parseInt(rgbMatch[1],10).toString(16)).slice(-2) +\r\n            (\"0\" + parseInt(rgbMatch[2],10).toString(16)).slice(-2) +\r\n            (\"0\" + parseInt(rgbMatch[3],10).toString(16)).slice(-2) : '';\r\n    },\r\n\r\n    /**\r\n     * @description Converts color values of other formats to hex color values and returns.\r\n     * @param {String} colorName Color value\r\n     * @returns {String}\r\n     */\r\n    colorName2hex: function (colorName) {\r\n        if (/^#/.test(colorName)) return colorName;\r\n        var temp = this.util.createElement('div');\r\n        temp.style.display = 'none';\r\n        temp.style.color = colorName;\r\n        var colors = this._w.getComputedStyle(this._d.body.appendChild(temp)).color.match(/\\d+/g).map(function (a) { return parseInt(a,10); });\r\n        this.util.removeItem(temp);\r\n        return (colors.length >= 3) ? '#' + (((1 << 24) + (colors[0] << 16) + (colors[1] << 8) + colors[2]).toString(16).substr(1)) : false;\r\n    }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}