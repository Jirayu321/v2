{"ast":null,"code":"import * as React from 'react';\nimport { useState, useRef, useEffect, useContext, useMemo, forwardRef, useImperativeHandle } from 'react';\nimport { MountedMapsContext } from './use-map';\nimport Mapbox from '../mapbox/mapbox';\nimport createRef from '../mapbox/create-ref';\nimport useIsomorphicLayoutEffect from '../utils/use-isomorphic-layout-effect';\nimport setGlobals from '../utils/set-globals';\nexport const MapContext = React.createContext(null);\nconst defaultProps = {\n  // Constraints\n  minZoom: 0,\n  maxZoom: 22,\n  minPitch: 0,\n  maxPitch: 60,\n  // Interaction handlers\n  scrollZoom: true,\n  boxZoom: true,\n  dragRotate: true,\n  dragPan: true,\n  keyboard: true,\n  doubleClickZoom: true,\n  touchZoomRotate: true,\n  touchPitch: true,\n  // Style\n  mapStyle: {\n    version: 8,\n    sources: {},\n    layers: []\n  },\n  styleDiffing: true,\n  projection: 'mercator',\n  renderWorldCopies: true,\n  // Callbacks\n  onError: e => console.error(e.error),\n  // Globals\n  RTLTextPlugin: 'https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js'\n};\nconst Map = forwardRef((props, ref) => {\n  const mountedMapsContext = useContext(MountedMapsContext);\n  const [mapInstance, setMapInstance] = useState(null);\n  const containerRef = useRef();\n  const {\n    current: contextValue\n  } = useRef({\n    mapLib: null,\n    map: null\n  });\n  useEffect(() => {\n    const mapLib = props.mapLib;\n    let isMounted = true;\n    let mapbox;\n    Promise.resolve(mapLib || import('mapbox-gl')).then(mapboxgl => {\n      if (!isMounted) {\n        return;\n      }\n\n      if (!mapboxgl.Map) {\n        // commonjs style\n        mapboxgl = mapboxgl.default;\n      }\n\n      if (!mapboxgl || !mapboxgl.Map) {\n        throw new Error('Invalid mapLib');\n      }\n\n      if (mapboxgl.supported(props)) {\n        setGlobals(mapboxgl, props);\n\n        if (props.reuseMaps) {\n          mapbox = Mapbox.reuse(props, containerRef.current);\n        }\n\n        if (!mapbox) {\n          mapbox = new Mapbox(mapboxgl.Map, props, containerRef.current);\n        }\n\n        contextValue.map = createRef(mapbox, mapboxgl);\n        contextValue.mapLib = mapboxgl;\n        setMapInstance(mapbox);\n        mountedMapsContext === null || mountedMapsContext === void 0 ? void 0 : mountedMapsContext.onMapMount(contextValue.map, props.id);\n      } else {\n        throw new Error('Map is not supported by this browser');\n      }\n    }).catch(error => {\n      props.onError({\n        type: 'error',\n        target: null,\n        originalEvent: null,\n        error\n      });\n    });\n    return () => {\n      isMounted = false;\n\n      if (mapbox) {\n        mountedMapsContext === null || mountedMapsContext === void 0 ? void 0 : mountedMapsContext.onMapUnmount(props.id);\n\n        if (props.reuseMaps) {\n          mapbox.recycle();\n        } else {\n          mapbox.destroy();\n        }\n      }\n    };\n  }, []);\n  useIsomorphicLayoutEffect(() => {\n    if (mapInstance) {\n      mapInstance.setProps(props);\n    }\n  });\n  useImperativeHandle(ref, () => contextValue.map, [mapInstance]);\n  const style = useMemo(() => ({\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    ...props.style\n  }), [props.style]);\n  return React.createElement(\"div\", {\n    id: props.id,\n    ref: containerRef,\n    style: style\n  }, mapInstance && React.createElement(MapContext.Provider, {\n    value: contextValue\n  }, React.createElement(\"div\", {\n    \"mapboxgl-children\": \"\"\n  }, props.children)));\n});\nMap.displayName = 'Map';\nMap.defaultProps = defaultProps;\nexport default Map;","map":{"version":3,"sources":["../../../src/components/map.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { useState, useRef, useEffect, useContext, useMemo, forwardRef, useImperativeHandle } from 'react';\nimport { MountedMapsContext } from './use-map';\nimport Mapbox from '../mapbox/mapbox';\nimport createRef from '../mapbox/create-ref';\nimport useIsomorphicLayoutEffect from '../utils/use-isomorphic-layout-effect';\nimport setGlobals from '../utils/set-globals';\nexport const MapContext = React.createContext(null);\nconst defaultProps = {\n    // Constraints\n    minZoom: 0,\n    maxZoom: 22,\n    minPitch: 0,\n    maxPitch: 60,\n    // Interaction handlers\n    scrollZoom: true,\n    boxZoom: true,\n    dragRotate: true,\n    dragPan: true,\n    keyboard: true,\n    doubleClickZoom: true,\n    touchZoomRotate: true,\n    touchPitch: true,\n    // Style\n    mapStyle: { version: 8, sources: {}, layers: [] },\n    styleDiffing: true,\n    projection: 'mercator',\n    renderWorldCopies: true,\n    // Callbacks\n    onError: e => console.error(e.error),\n    // Globals\n    RTLTextPlugin: 'https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js'\n};\nconst Map = forwardRef((props, ref) => {\n    const mountedMapsContext = useContext(MountedMapsContext);\n    const [mapInstance, setMapInstance] = useState(null);\n    const containerRef = useRef();\n    const { current: contextValue } = useRef({ mapLib: null, map: null });\n    useEffect(() => {\n        const mapLib = props.mapLib;\n        let isMounted = true;\n        let mapbox;\n        Promise.resolve(mapLib || import('mapbox-gl'))\n            .then(mapboxgl => {\n            if (!isMounted) {\n                return;\n            }\n            if (!mapboxgl.Map) {\n                // commonjs style\n                mapboxgl = mapboxgl.default;\n            }\n            if (!mapboxgl || !mapboxgl.Map) {\n                throw new Error('Invalid mapLib');\n            }\n            if (mapboxgl.supported(props)) {\n                setGlobals(mapboxgl, props);\n                if (props.reuseMaps) {\n                    mapbox = Mapbox.reuse(props, containerRef.current);\n                }\n                if (!mapbox) {\n                    mapbox = new Mapbox(mapboxgl.Map, props, containerRef.current);\n                }\n                contextValue.map = createRef(mapbox, mapboxgl);\n                contextValue.mapLib = mapboxgl;\n                setMapInstance(mapbox);\n                mountedMapsContext === null || mountedMapsContext === void 0 ? void 0 : mountedMapsContext.onMapMount(contextValue.map, props.id);\n            }\n            else {\n                throw new Error('Map is not supported by this browser');\n            }\n        })\n            .catch(error => {\n            props.onError({\n                type: 'error',\n                target: null,\n                originalEvent: null,\n                error\n            });\n        });\n        return () => {\n            isMounted = false;\n            if (mapbox) {\n                mountedMapsContext === null || mountedMapsContext === void 0 ? void 0 : mountedMapsContext.onMapUnmount(props.id);\n                if (props.reuseMaps) {\n                    mapbox.recycle();\n                }\n                else {\n                    mapbox.destroy();\n                }\n            }\n        };\n    }, []);\n    useIsomorphicLayoutEffect(() => {\n        if (mapInstance) {\n            mapInstance.setProps(props);\n        }\n    });\n    useImperativeHandle(ref, () => contextValue.map, [mapInstance]);\n    const style = useMemo(() => ({\n        position: 'relative',\n        width: '100%',\n        height: '100%',\n        ...props.style\n    }), [props.style]);\n    return (React.createElement(\"div\", { id: props.id, ref: containerRef, style: style }, mapInstance && (React.createElement(MapContext.Provider, { value: contextValue },\n        React.createElement(\"div\", { \"mapboxgl-children\": \"\" }, props.children)))));\n});\nMap.displayName = 'Map';\nMap.defaultProps = defaultProps;\nexport default Map;\n//# sourceMappingURL=map.js.map"]},"metadata":{},"sourceType":"module"}