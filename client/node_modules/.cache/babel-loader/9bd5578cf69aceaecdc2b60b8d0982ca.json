{"ast":null,"code":"import _slicedToArray from \"/Users/jirayuyungmeesuk/Desktop/code/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/jirayuyungmeesuk/Desktop/code/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { useContext, useEffect, useMemo, useState, useRef } from 'react';\nimport { MapContext } from './map';\nimport assert from '../utils/assert';\nimport { deepEqual } from '../utils/deep-equal';\n/* eslint-disable complexity, max-statements */\n\nfunction updateLayer(map, id, props, prevProps) {\n  assert(props.id === prevProps.id, 'layer id changed');\n  assert(props.type === prevProps.type, 'layer type changed');\n\n  if (props.type === 'custom' || prevProps.type === 'custom') {\n    return;\n  }\n\n  var _props$layout = props.layout,\n      layout = _props$layout === void 0 ? {} : _props$layout,\n      _props$paint = props.paint,\n      paint = _props$paint === void 0 ? {} : _props$paint,\n      filter = props.filter,\n      minzoom = props.minzoom,\n      maxzoom = props.maxzoom,\n      beforeId = props.beforeId;\n\n  if (beforeId !== prevProps.beforeId) {\n    map.moveLayer(id, beforeId);\n  }\n\n  if (layout !== prevProps.layout) {\n    var prevLayout = prevProps.layout || {};\n\n    for (var key in layout) {\n      if (!deepEqual(layout[key], prevLayout[key])) {\n        map.setLayoutProperty(id, key, layout[key]);\n      }\n    }\n\n    for (var _key in prevLayout) {\n      if (!layout.hasOwnProperty(_key)) {\n        map.setLayoutProperty(id, _key, undefined);\n      }\n    }\n  }\n\n  if (paint !== prevProps.paint) {\n    var prevPaint = prevProps.paint || {};\n\n    for (var _key2 in paint) {\n      if (!deepEqual(paint[_key2], prevPaint[_key2])) {\n        map.setPaintProperty(id, _key2, paint[_key2]);\n      }\n    }\n\n    for (var _key3 in prevPaint) {\n      if (!paint.hasOwnProperty(_key3)) {\n        map.setPaintProperty(id, _key3, undefined);\n      }\n    }\n  }\n\n  if (!deepEqual(filter, prevProps.filter)) {\n    map.setFilter(id, filter);\n  }\n\n  if (minzoom !== prevProps.minzoom || maxzoom !== prevProps.maxzoom) {\n    map.setLayerZoomRange(id, minzoom, maxzoom);\n  }\n}\n\nfunction createLayer(map, id, props) {\n  // @ts-ignore\n  if (map.style && map.style._loaded && (!('source' in props) || map.getSource(props.source))) {\n    var options = _objectSpread(_objectSpread({}, props), {}, {\n      id: id\n    });\n\n    delete options.beforeId; // @ts-ignore\n\n    map.addLayer(options, props.beforeId);\n  }\n}\n/* eslint-enable complexity, max-statements */\n\n\nvar layerCounter = 0;\n\nfunction Layer(props) {\n  var map = useContext(MapContext).map.getMap();\n  var propsRef = useRef(props);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      setStyleLoaded = _useState2[1];\n\n  var id = useMemo(function () {\n    return props.id || \"jsx-layer-\".concat(layerCounter++);\n  }, []);\n  useEffect(function () {\n    if (map) {\n      var forceUpdate = function forceUpdate() {\n        return setStyleLoaded(function (version) {\n          return version + 1;\n        });\n      };\n\n      map.on('styledata', forceUpdate);\n      forceUpdate();\n      return function () {\n        map.off('styledata', forceUpdate); // @ts-ignore\n\n        if (map.style && map.style._loaded && map.getLayer(id)) {\n          map.removeLayer(id);\n        }\n      };\n    }\n\n    return undefined;\n  }, [map]); // @ts-ignore\n\n  var layer = map && map.style && map.getLayer(id);\n\n  if (layer) {\n    try {\n      updateLayer(map, id, props, propsRef.current);\n    } catch (error) {\n      console.warn(error); // eslint-disable-line\n    }\n  } else {\n    createLayer(map, id, props);\n  } // Store last rendered props\n\n\n  propsRef.current = props;\n  return null;\n}\n\nexport default Layer;","map":{"version":3,"sources":["../../../src/components/layer.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { useContext, useEffect, useMemo, useState, useRef } from 'react';\nimport { MapContext } from './map';\nimport assert from '../utils/assert';\nimport { deepEqual } from '../utils/deep-equal';\n/* eslint-disable complexity, max-statements */\nfunction updateLayer(map, id, props, prevProps) {\n    assert(props.id === prevProps.id, 'layer id changed');\n    assert(props.type === prevProps.type, 'layer type changed');\n    if (props.type === 'custom' || prevProps.type === 'custom') {\n        return;\n    }\n    const { layout = {}, paint = {}, filter, minzoom, maxzoom, beforeId } = props;\n    if (beforeId !== prevProps.beforeId) {\n        map.moveLayer(id, beforeId);\n    }\n    if (layout !== prevProps.layout) {\n        const prevLayout = prevProps.layout || {};\n        for (const key in layout) {\n            if (!deepEqual(layout[key], prevLayout[key])) {\n                map.setLayoutProperty(id, key, layout[key]);\n            }\n        }\n        for (const key in prevLayout) {\n            if (!layout.hasOwnProperty(key)) {\n                map.setLayoutProperty(id, key, undefined);\n            }\n        }\n    }\n    if (paint !== prevProps.paint) {\n        const prevPaint = prevProps.paint || {};\n        for (const key in paint) {\n            if (!deepEqual(paint[key], prevPaint[key])) {\n                map.setPaintProperty(id, key, paint[key]);\n            }\n        }\n        for (const key in prevPaint) {\n            if (!paint.hasOwnProperty(key)) {\n                map.setPaintProperty(id, key, undefined);\n            }\n        }\n    }\n    if (!deepEqual(filter, prevProps.filter)) {\n        map.setFilter(id, filter);\n    }\n    if (minzoom !== prevProps.minzoom || maxzoom !== prevProps.maxzoom) {\n        map.setLayerZoomRange(id, minzoom, maxzoom);\n    }\n}\nfunction createLayer(map, id, props) {\n    // @ts-ignore\n    if (map.style && map.style._loaded && (!('source' in props) || map.getSource(props.source))) {\n        const options = { ...props, id };\n        delete options.beforeId;\n        // @ts-ignore\n        map.addLayer(options, props.beforeId);\n    }\n}\n/* eslint-enable complexity, max-statements */\nlet layerCounter = 0;\nfunction Layer(props) {\n    const map = useContext(MapContext).map.getMap();\n    const propsRef = useRef(props);\n    const [, setStyleLoaded] = useState(0);\n    const id = useMemo(() => props.id || `jsx-layer-${layerCounter++}`, []);\n    useEffect(() => {\n        if (map) {\n            const forceUpdate = () => setStyleLoaded(version => version + 1);\n            map.on('styledata', forceUpdate);\n            forceUpdate();\n            return () => {\n                map.off('styledata', forceUpdate);\n                // @ts-ignore\n                if (map.style && map.style._loaded && map.getLayer(id)) {\n                    map.removeLayer(id);\n                }\n            };\n        }\n        return undefined;\n    }, [map]);\n    // @ts-ignore\n    const layer = map && map.style && map.getLayer(id);\n    if (layer) {\n        try {\n            updateLayer(map, id, props, propsRef.current);\n        }\n        catch (error) {\n            console.warn(error); // eslint-disable-line\n        }\n    }\n    else {\n        createLayer(map, id, props);\n    }\n    // Store last rendered props\n    propsRef.current = props;\n    return null;\n}\nexport default Layer;\n//# sourceMappingURL=layer.js.map"]},"metadata":{},"sourceType":"module"}