{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/jirayuyungmeesuk/Desktop/code/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nvar globalSettings = ['baseApiUrl', 'maxParallelImageRequests', 'workerClass', 'workerCount', 'workerUrl'];\nexport default function setGlobals(mapLib, props) {\n  var _iterator = _createForOfIteratorHelper(globalSettings),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var key = _step.value;\n\n      if (key in props) {\n        mapLib[key] = props[key];\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  if (props.RTLTextPlugin && mapLib.getRTLTextPluginStatus && mapLib.getRTLTextPluginStatus() === 'unavailable') {\n    mapLib.setRTLTextPlugin(props.RTLTextPlugin, function (error) {\n      if (error) {\n        // eslint-disable-next-line\n        console.error(error);\n      }\n    }, false);\n  }\n}","map":{"version":3,"sources":["../../../src/utils/set-globals.ts"],"names":[],"mappings":";AAsBA,IAAM,cAAc,GAAG,CACrB,YADqB,EAErB,0BAFqB,EAGrB,aAHqB,EAIrB,aAJqB,EAKrB,WALqB,CAAvB;AAQA,eAAc,SAAU,UAAV,CAAqB,MAArB,EAAkC,KAAlC,EAAuD;EAAA,2CACjD,cADiD;EAAA;;EAAA;IACnE,oDAAkC;MAAA,IAAvB,GAAuB;;MAChC,IAAI,GAAG,IAAI,KAAX,EAAkB;QAChB,MAAM,CAAC,GAAD,CAAN,GAAc,KAAK,CAAC,GAAD,CAAnB;MACD;IACF;EALkE;IAAA;EAAA;IAAA;EAAA;;EAOnE,IACE,KAAK,CAAC,aAAN,IACA,MAAM,CAAC,sBADP,IAEA,MAAM,CAAC,sBAAP,OAAoC,aAHtC,EAIE;IACA,MAAM,CAAC,gBAAP,CACE,KAAK,CAAC,aADR,EAEE,UAAC,KAAD,EAAkB;MAChB,IAAI,KAAJ,EAAW;QACT;QACA,OAAO,CAAC,KAAR,CAAc,KAAd;MACD;IACF,CAPH,EAQE,KARF;EAUD;AACF","sourceRoot":"","sourcesContent":["const globalSettings = [\n    'baseApiUrl',\n    'maxParallelImageRequests',\n    'workerClass',\n    'workerCount',\n    'workerUrl'\n];\nexport default function setGlobals(mapLib, props) {\n    for (const key of globalSettings) {\n        if (key in props) {\n            mapLib[key] = props[key];\n        }\n    }\n    if (props.RTLTextPlugin &&\n        mapLib.getRTLTextPluginStatus &&\n        mapLib.getRTLTextPluginStatus() === 'unavailable') {\n        mapLib.setRTLTextPlugin(props.RTLTextPlugin, (error) => {\n            if (error) {\n                // eslint-disable-next-line\n                console.error(error);\n            }\n        }, false);\n    }\n}\n//# sourceMappingURL=set-globals.js.map"]},"metadata":{},"sourceType":"module"}